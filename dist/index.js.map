{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    systemName: \"MSTeamsJSSP\",\r\n    displayName: \"Microsoft Teams Connector\",\r\n    description: \"A connector for Microsoft Teams\"\r\n};\r\n\r\n// Constants\r\nconst baseUriEndpoint = \"https://graph.microsoft.com/v1.0\";\r\nconst baseUriEndpointBeta = \"https://graph.microsoft.com/beta\";\r\n\r\n//\r\n// Objects\r\n\r\nconst Team = \"team\";\r\nconst Channel = \"channel\";\r\nconst Tab = \"tab\";\r\nconst App = \"app\";\r\n\r\n//\r\n// Team\r\nconst TeamId = \"id\";\r\nconst TeamWeburl = \"weburl\";\r\nconst TeamDisplayName = \"displayName\";\r\nconst TeamCreationDate = \"creationDate\"\r\nconst TeamDescription = \"description\";\r\nconst TeamEmail = \"email\";\r\nconst TeamMailEnabled = \"mailEnabled\";\r\nconst TeamMailNickname = \"mailNickname\";\r\nconst TeamArchiveStatus = \"archiveStatus\";\r\nconst TeamOperationId = \"operationId\";\r\nconst TeamOperationType = \"operationType\";\r\nconst TeamLastActionDate = \"lastActionDate\";\r\nconst TeamAttemptsCount = \"attemptsCount\";\r\nconst TeamTargetResourceId = \"targetResourceId\";\r\nconst TeamTargetResourceLocation = \"targetResourceLocation\";\r\nconst TeamArchiveError = \"archiveError\";\r\nconst TeamUserPrincipalName = \"userPrincipalName\";\r\nconst TeamResourceProvisioningOptions = \"resourceProvisioningOptions\";\r\nconst TeamIsArchived = \"isArchived\";\r\nconst TeamIsSuccessful = \"isSuccessful\";\r\nconst TeamRequestStatusUrl = \"requestStatusUrl\";\r\nconst TeamMsAllowCreateUpdateChannels = \"msAllowCreateUpdateChannels\";\r\nconst TeamMsAllowDeleteChannels = \"msAllowDeleteChannels\";\r\nconst TeamMsAllowAddRemoveApps = \"msAllowAddRemoveApps\";\r\nconst TeamMsAllowCreateUpdateRemoveTabs = \"msAllowCreateUpdateRemoveTabs\";\r\nconst TeamMsAllowCreateUpdateRemoveConnectors = \"msAllowCreateUpdateRemoveConnectors\";\r\nconst TeamGsAllowCreateUpdateChannels = \"gsAllowCreateUpdateChannels\";\r\nconst TeamGsAllowDeleteChannels = \"gsAllowDeleteChannels\";\r\nconst TeamMsgAllowUserEditMessages = \"msgsAllowUserEditMessages\";\r\nconst TeamMsgAllowUserDeleteMessages = \"msgsAllowUserDeleteMessages\";\r\nconst TeamMsgAllowOwnerDeleteMessages = \"msgsAllowOwnerDeleteMessages\";\r\nconst TeamMsgAllowTeamMentions = \"msgsAllowTeamMentions\";\r\nconst TeamMsgAllowChannelMentions = \"msgsAllowChannelMentions\";\r\nconst TeamFsAllowGiphy = \"fsAllowGiphy\";\r\nconst TeamFsAllowStickersAndMemes = \"fsAllowStickersAndMemes\";\r\nconst TeamFsAllowCustomMemes = \"fsAllowCustomMemes\";\r\n\r\nconst TeamGet = \"get\";\r\nconst TeamCreate = \"create\";\r\nconst TeamAdd = \"add\"; //  not used\r\nconst TeamArchive = \"archive\";\r\nconst TeamUnarchive = \"unarchive\";\r\nconst TeamCheckStatus = \"checkStatus\"; // not used\r\nconst TeamAddMember = \"addMember\";\r\nconst TeamRemoveMember = \"removeMember\";\r\nconst TeamUpdate = \"update\";\r\nconst TeamClone = \"clone\";\r\nconst TeamAddOwner = \"addOwner\";\r\nconst TeamList = \"list\";\r\nconst TeamMyTeamsList = \"myTeamsList\";\r\n\r\nconst TeamArchiveOperationUrl = \"archiveOperationUrl\";\r\nconst TeamAddAsMemberAlso = \"addAsMemberAlso\"; //  not used\r\nconst TeamDisplayNameStartsWith = \"displayNameStartsWith\";\r\nconst TeamUserId = \"userId\";\r\n\r\n//\r\n// Channel\r\nconst ChannelId = \"id\";\r\nconst ChannelDisplayName = \"displayName\";\r\nconst ChannelDescription = \"description\";\r\nconst ChannelEmail = \"email\";\r\nconst ChannelWeburl = \"weburl\";\r\nconst ChannelIsSuccessful = \"isSuccessful\";\r\nconst ChannelTeamId = \"teamId\";\r\nconst ChannelMessageSubject = \"messageSubject\";\r\nconst ChannelMessageBody = \"messageBody\";\r\nconst ChannelMessageId = \"messageId\";\r\nconst ChannelMessageIsImportant = \"messageIsImportant\";\r\nconst MembershipType = \"membershipType\";\r\nconst ChannelUserPrincipalName = \"userPrincipalName\";\r\nconst ChannelUserId = \"userId\";\r\n\r\nconst ChannelGet = \"get\";\r\nconst ChannelList = \"list\";\r\nconst ChannelCreate = \"create\";\r\nconst ChannelDelete = \"delete\";\r\nconst ChannelUpdate = \"update\";\r\nconst ChannelSendMessage = \"sendMessage\";\r\nconst ChannelReplyMessage = \"replyMessage\";\r\nconst ChannelAddMember = \"addMember\";\r\n\r\n\r\n//\r\n// Tab\r\nconst TabId = \"id\";\r\nconst TabDisplayName = \"displayName\";\r\nconst TabWeburl = \"weburl\";\r\nconst TabConfigEntityId = \"configEntityId\";\r\nconst TabConfigContentUrl = \"configContentUrl\";\r\nconst TabConfigWebsiteUrl = \"configWebsiteUrl\";\r\nconst TabConfigRemoveUrl = \"configRemoveUrl\";\r\nconst TabTeamsAppAppId = \"teamsAppAppId\";\r\nconst TabTeamsAppExternalId = \"teamsAppExternalId\";\r\nconst TabTeamsAppAppDisplayName = \"teamsAppAppDisplayName\";\r\nconst TabTeamsAppDistMethod = \"teamsAppDistMethod\";\r\nconst TabSortOrderIndex = \"sortOrderIndex\";\r\nconst TabIsSuccessful = \"isSuccessful\";\r\nconst TabTeamId = \"teamId\";\r\nconst TabChannelId = \"channelId\";\r\n\r\nconst TabGet = \"get\";\r\nconst TabList = \"list\";\r\nconst TabCreateWordTab = \"createWordTab\";\r\nconst TabCreateExcelTab = \"createExcelTab\";\r\nconst TabCreatePowerPointTab = \"createPowerPointTab\";\r\nconst TabCreatePdfTab = \"createPdfTab\";\r\nconst TabCreateOneNoteTab = \"createOneNoteTab\";\r\nconst TabCreatePlannerTab = \"createPlannerTab\";\r\nconst TabCreateSharePointTab = \"createSharePointTab\";\r\nconst TabCreateMsFormsTab = \"createMsFormsTab\";\r\nconst TabCreateMsStreamTab = \"createStreamTab\";\r\nconst TabCreateWebsiteTab = \"createWebsiteTab\";\r\nconst TabCreateWikiTab = \"createWikiTab\";\r\nconst TabCreatePowerBiTab = \"createPowerBiTab\";\r\nconst TabCreateDocumentLibraryTab = \"createDocumentLibraryTab\";\r\nconst TabCreateCustomTab = \"createCustomTab\";\r\nconst TabDelete = \"delete\";\r\nconst TabUpdate = \"update\";\r\n\r\n//\r\n// App\r\nconst AppId = \"id\";\r\nconst AppTeamId = \"teamId\";\r\nconst AppDisplayName = \"displayName\";\r\nconst AppVersion = \"version\";\r\nconst AppTeamAppDefinitionId = \"teamsAppDefinitionId\";\r\nconst AppTeamsAppId = \"teamsAppId\";\r\n\r\nconst AppList = \"list\";\r\n\r\n//OnDescribe\r\nondescribe = function () {\r\n    postSchema({\r\n\r\n        objects: {\r\n            [Team]: {\r\n                displayName: \"Team\",\r\n                description: \"Team\",\r\n                properties: {\r\n                    [TeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamWeburl]: {\r\n                        displayName: \"Web Url\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamCreationDate]: {\r\n                        displayName: \"Created On\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDescription]: {\r\n                        displayName: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamEmail]: {\r\n                        displayName: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamMailEnabled]: {\r\n                        displayName: \"Mail Enabled\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMailNickname]: {\r\n                        displayName: \"Mail Nickname\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveStatus]: {\r\n                        displayName: \"Archive Status\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationId]: {\r\n                        displayName: \"Operation Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationType]: {\r\n                        displayName: \"Operation Type\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamLastActionDate]: {\r\n                        displayName: \"Last Action Date\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamAttemptsCount]: {\r\n                        displayName: \"Attempts Count\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceId]: {\r\n                        displayName: \"Target Resource Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceLocation]: {\r\n                        displayName: \"Target Resource Location\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveError]: {\r\n                        displayName: \"Error\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamResourceProvisioningOptions]: {\r\n                        displayName: \"Resource Provisioning Options\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamIsArchived]: {\r\n                        displayName: \"Is Archived\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamRequestStatusUrl]: {\r\n                        displayName: \"Request Status Url\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowAddRemoveApps]: {\r\n                        displayName: \"Allow add/remove apps to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveTabs]: {\r\n                        displayName: \"Allow create/update/remove tabs to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveConnectors]: {\r\n                        displayName: \"Allow create/update/remove connectors to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserEditMessages]: {\r\n                        displayName: \"Allow user to edit messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserDeleteMessages]: {\r\n                        displayName: \"Allow user to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowOwnerDeleteMessages]: {\r\n                        displayName: \"Allow owner to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowTeamMentions]: {\r\n                        displayName: \"Allow team mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowChannelMentions]: {\r\n                        displayName: \"Allow channel mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowGiphy]: {\r\n                        displayName: \"Allow Giphy\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowStickersAndMemes]: {\r\n                        displayName: \"Allow stickers and memes\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowCustomMemes]: {\r\n                        displayName: \"Allow custom memes\",\r\n                        type: \"boolean\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TeamGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Team\",\r\n                        type: \"read\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamArchiveStatus,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a Team\",\r\n                        type: \"create\",\r\n                        inputs: [\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamDisplayName,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    // [TeamAdd]: {\r\n                    //     displayName: \"Add\",\r\n                    //     description: \"Adds a Team to an existing group\",\r\n                    //     type: \"create\",\r\n                    //     inputs: [TeamId,\r\n                    //         TeamUserPrincipalName\r\n                    //     ],\r\n                    //     outputs: [TeamId,\r\n                    //         TeamDisplayName,\r\n                    //         TeamCreationDate,\r\n                    //         TeamDescription,\r\n                    //         TeamEmail,\r\n                    //         TeamMailEnabled,\r\n                    //         TeamMailNickname,\r\n                    //         TeamWeburl,\r\n                    //         TeamIsSuccessful\r\n                    //     ]\r\n                    // },\r\n                    [TeamArchive]: {\r\n                        displayName: \"Archive\",\r\n                        description: \"Archives a Team (makes it read-only)\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUnarchive]: {\r\n                        displayName: \"Unarchive\",\r\n                        description: \"Unarchives a Team\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    /*                     [TeamCheckStatus]: {\r\n                                            displayName: \"Check Status\",\r\n                                            description: \"Check the status of an Archive job.\",\r\n                                            type: \"execute\",\r\n                                            parameters: {\r\n                                                [TeamArchiveOperationUrl]: {\r\n                                                    displayName: \"Archive/Unarchive operation URL\",\r\n                                                    type: \"string\"\r\n                                                }\r\n                                            },\r\n                                            requiredParameters: [TeamArchiveOperationUrl],\r\n                                            outputs: [TeamOperationId,\r\n                                                TeamOperationType,\r\n                                                TeamCreationDate,\r\n                                                TeamArchiveStatus,\r\n                                                TeamLastActionDate,\r\n                                                TeamAttemptsCount,\r\n                                                TeamTargetResourceId,\r\n                                                TeamTargetResourceLocation,\r\n                                                TeamArchiveError\r\n                                            ]\r\n                                        }, */\r\n                    [TeamAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamRemoveMember]: { // TODO\r\n                        displayName: \"Remove Member\",\r\n                        description: \"Removes a member from a Team\",\r\n                        type: \"delete\",\r\n                        inputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        requiredInputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Team's settings\",\r\n                        type: \"update\",\r\n                        inputs: [TeamId,\r\n                            TeamMsAllowCreateUpdateChannels,\r\n                            TeamMsAllowDeleteChannels,\r\n                            TeamMsAllowAddRemoveApps,\r\n                            TeamMsAllowCreateUpdateRemoveTabs,\r\n                            TeamMsAllowCreateUpdateRemoveConnectors,\r\n                            TeamGsAllowCreateUpdateChannels,\r\n                            TeamGsAllowDeleteChannels,\r\n                            TeamMsgAllowUserEditMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowTeamMentions,\r\n                            TeamMsgAllowChannelMentions,\r\n                            TeamFsAllowGiphy,\r\n                            TeamFsAllowStickersAndMemes,\r\n                            TeamFsAllowCustomMemes\r\n                        ],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamClone]: {\r\n                        displayName: \"Copy/Clone\",\r\n                        description: \"Makes a copy of an existing Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamAddOwner]: {\r\n                        displayName: \"Add Owner\",\r\n                        description: \"Adds an Owner to a Team\",\r\n                        type: \"execute\",\r\n                        // parameters: {\r\n                        //     [TeamAddAsMemberAlso]: {\r\n                        //         displayName: \"Add as Member Also\",\r\n                        //         type: \"boolean\"\r\n                        //     }\r\n                        // },\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamList]: {\r\n                        displayName: \"List\",\r\n                        description: \"Lists all Teams and groups without Teams\",\r\n                        type: \"list\",\r\n                        parameters: {\r\n                            [TeamDisplayNameStartsWith]: {\r\n                                displayName: \"Display Name Starts With\",\r\n                                type: \"string\"\r\n                            }\r\n                        },\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamResourceProvisioningOptions\r\n                        ]\r\n                    },\r\n                    [TeamMyTeamsList]: {\r\n                        displayName: \"List My Teams\",\r\n                        description: \"Lists all Teams you belong to\",\r\n                        type: \"list\",\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamIsArchived\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            [Channel]: {\r\n                displayName: \"Channel\",\r\n                description: \"Channel\",\r\n                properties: {\r\n                    [ChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDescription]: {\r\n                        displayName: \"Description\",\r\n                        description: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelEmail]: {\r\n                        displayName: \"Email\",\r\n                        description: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageSubject]: {\r\n                        displayName: \"Subject\",\r\n                        description: \"Message Subject\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageId]: {\r\n                        displayName: \"Message Id\",\r\n                        description: \"Message Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageBody]: {\r\n                        displayName: \"Body\",\r\n                        description: \"Message Body\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageIsImportant]: {\r\n                        displayName: \"Is Important\",\r\n                        description: \"Message Importance (Normal/High)\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [MembershipType]: {\r\n                        displayName: \"Membership Type\",\r\n                        description: \"Type of Channel\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        description: \"Principal Name of User\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [ChannelGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Channel\",\r\n                        type: \"read\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List the channels in a Team\",\r\n                        type: \"list\",\r\n                        inputs: [ChannelTeamId],\r\n                        requiredInputs: [ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail\r\n                        ]\r\n                    },\r\n                    [ChannelCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a new Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType\r\n                        ],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelDelete]: {\r\n                        displayName: \"Delete\",\r\n                        description: \"Deletes a Channel\",\r\n                        type: \"delete\",\r\n                        inputs: [ChannelId,\r\n                            ChannelTeamId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Channel\",\r\n                        type: \"update\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelSendMessage]: {\r\n                        displayName: \"Send Message\",\r\n                        description: \"Sends a Message to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageSubject,\r\n                            ChannelMessageBody,\r\n                            ChannelMessageIsImportant\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful, ChannelMessageId]\r\n                    },\r\n                    [ChannelReplyMessage]: {\r\n                        displayName: \"Reply to a Message\",\r\n                        description: \"Reply to a Message in a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    }\r\n                }\r\n            },\r\n            [Tab]: {\r\n                displayName: \"Tab\",\r\n                description: \"Tab\",\r\n                properties: {\r\n                    [TabId]: {\r\n                        displayName: \"Tab Id\",\r\n                        description: \"Tab Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigEntityId]: {\r\n                        displayName: \"Entity Id\",\r\n                        description: \"Entity Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigContentUrl]: {\r\n                        displayName: \"Content URL\",\r\n                        description: \"Content URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigWebsiteUrl]: {\r\n                        displayName: \"Website URL\",\r\n                        description: \"Website URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigRemoveUrl]: {\r\n                        displayName: \"Remove URL\",\r\n                        description: \"Remove URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppExternalId]: {\r\n                        displayName: \"External Id\",\r\n                        description: \"External Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppDistMethod]: {\r\n                        displayName: \"Distribution Method\",\r\n                        description: \"Distribution Method\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabSortOrderIndex]: {\r\n                        displayName: \"Sort Order Index\",\r\n                        description: \"Sort Order Index\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TabTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TabGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Get the details of a tab.\",\r\n                        type: \"read\",\r\n                        inputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabTeamsAppAppId,\r\n                            TabTeamsAppExternalId,\r\n                            TabTeamsAppAppDisplayName,\r\n                            TabTeamsAppDistMethod,\r\n                            TabSortOrderIndex,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List tabs\",\r\n                        type: \"list\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabCreateWordTab]: {\r\n                        displayName: \"Create Word tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateExcelTab]: {\r\n                        displayName: \"Create Excel tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerPointTab]: {\r\n                        displayName: \"Create PowerPoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePdfTab]: {\r\n                        displayName: \"Create PDF tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateOneNoteTab]: {\r\n                        displayName: \"Create OneNote tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePlannerTab]: {\r\n                        displayName: \"Create Planner tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateSharePointTab]: {\r\n                        displayName: \"Create SharePoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsFormsTab]: {\r\n                        displayName: \"Create Forms tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsStreamTab]: {\r\n                        displayName: \"Create Stream tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWebsiteTab]: {\r\n                        displayName: \"Create Website tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWikiTab]: {\r\n                        displayName: \"Create Wiki tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerBiTab]: {\r\n                        displayName: \"Create PowerBI tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateDocumentLibraryTab]: {\r\n                        displayName: \"Create Document tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateCustomTab]: {\r\n                        displayName: \"Create custom tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabDelete]: {\r\n                        displayName: \"Delete tab\",\r\n                        type: \"delete\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabUpdate]: {\r\n                        displayName: \"Update tab\",\r\n                        type: \"update\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId,\r\n                            TabDisplayName\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [TabIsSuccessful]\r\n                    },\r\n                }\r\n            },\r\n            [App]: {\r\n                displayName: \"App\",\r\n                description: \"App\",\r\n                properties: {\r\n                    [AppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppVersion]: {\r\n                        displayName: \"version\",\r\n                        description: \"version\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamAppDefinitionId]: {\r\n                        displayName: \"Teams App Definition Id\",\r\n                        description: \"Teams App Definition Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamsAppId]: {\r\n                        displayName: \"Teams App Id\",\r\n                        description: \"Teams App Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [AppList]: {\r\n                        displayName: \"List installed apps\",\r\n                        type: \"list\",\r\n                        inputs: [AppTeamId],\r\n                        requiredInputs: [AppTeamId],\r\n                        outputs: [AppId,\r\n                            AppDisplayName,\r\n                            AppVersion,\r\n                            AppTeamAppDefinitionId,\r\n                            AppTeamsAppId\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\n// OnExecute\r\nonexecute = function ({ objectName, methodName, parameters, properties }) {\r\n    switch (objectName) {\r\n        case Team:\r\n            onexecuteTeam(methodName, parameters, properties);\r\n            break;\r\n        case Channel:\r\n            onexecuteChannel(methodName, parameters, properties);\r\n            break;\r\n        case Tab:\r\n            onexecuteTab(methodName, parameters, properties);\r\n            break;\r\n        case App:\r\n            onexecuteApp(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteApp(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case AppList:\r\n            onexecuteInstalledAppList(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeam(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TeamIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TeamIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TeamGet:\r\n            onexecuteTeamGet(parameters, properties);\r\n            break;\r\n        case TeamCreate:\r\n            onexecuteTeamCreate(parameters, properties);\r\n            break;\r\n        case TeamAdd:\r\n            onexecuteTeamAdd(parameters, properties);\r\n            break;\r\n        case TeamUpdate:\r\n            onexecuteTeamUpdate(parameters, properties);\r\n            break;\r\n        case TeamList:\r\n            onexecuteTeamList(parameters, properties);\r\n            break;\r\n        case TeamArchive:\r\n            onexecuteTeamArchive(parameters, properties);\r\n            break;\r\n        case TeamUnarchive:\r\n            onexecuteTeamUnarchive(parameters, properties);\r\n            break;\r\n        case TeamAddMember:\r\n            onexecuteTeamAddMember(parameters, properties);\r\n            break;\r\n        case TeamRemoveMember:\r\n            onexecuteTeamRemoveMember(parameters, properties);\r\n            break;\r\n        case TeamClone:\r\n            onexecuteTeamClone(parameters, properties);\r\n            break;\r\n        case TeamAddOwner:\r\n            onexecuteTeamAddOwner(parameters, properties);\r\n            break;\r\n        case TeamMyTeamsList:\r\n            onexecuteTeamMyTeamsList(parameters, properties);\r\n            break;\r\n        case TeamCheckStatus:\r\n            onexecuteTeamCheckStatus(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTab(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TabIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TabIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TabGet:\r\n            onexecuteTabGet(parameters, properties);\r\n            break;\r\n        case TabUpdate:\r\n            onexecuteTabUpdate(parameters, properties);\r\n            break;\r\n        case TabList:\r\n            onexecuteTabList(parameters, properties);\r\n            break;\r\n        case TabDelete:\r\n            onexecuteTabDelete(parameters, properties);\r\n            break;\r\n        case TabCreateWordTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateExcelTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePdfTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWikiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateCustomTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[TeamIsSuccessful] = true;\r\n    //properties[TeamId] = properties[TeamId];\r\n    // Get Group Details By Group ID\r\n    GetGroupDetailsById(parameters, properties, function (b) {\r\n        properties[TeamDisplayName] = b.displayName;\r\n        properties[TeamCreationDate] = b.createdDateTime;\r\n        properties[TeamDescription] = b.description;\r\n        properties[TeamEmail] = b.mail;\r\n        properties[TeamMailEnabled] = b.mailEnabled;\r\n        properties[TeamMailNickname] = b.mailNickname;\r\n        //Get Team Details By Group ID\r\n        GetTeamDetailsByID(parameters, properties, function (c) {\r\n            properties[TeamWeburl] = c.webUrl;\r\n            properties[TeamArchiveStatus] = c.isArchived;\r\n            //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    // Create a Group, then add a team\r\n    properties[TeamIsSuccessful] = true;\r\n    CreateGroup(parameters, properties, function (a) {\r\n        //properties[TeamId] = parameters[TeamId] = a.id;\r\n        properties[TeamId] = a.id;\r\n        properties[TeamCreationDate] = a.createdDateTime;\r\n        properties[TeamDescription] = a.description;\r\n        properties[TeamDisplayName] = a.displayName;\r\n        properties[TeamEmail] = a.mail;\r\n        properties[TeamMailEnabled] = a.mailEnabled;\r\n        properties[TeamMailNickname] = a.mailNickname;\r\n        //Create a Team under the above Group\r\n        CreateTeam(parameters, properties, function (b) {\r\n            properties[TeamWeburl] = b.webUrl;\r\n            //Get User\r\n            // GetUser(parameters, properties, function (c) {\r\n            //     parameters[TeamUserId] = c.id;\r\n            //     //Add Group Owner\r\n            //     AddGroupOwner(parameters, properties, function (d) {\r\n            //         //Add Members to the Group\r\n            //         AddGroupMembers(parameters, properties, function (d) {\r\n            //             //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n            //         });\r\n            //     });\r\n            // });\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetGroupIdByMailNickName(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var component = encodeURIComponent(`?$filter=mailNickName&q='${properties[TeamMailNickname]}'`);\r\n    var url = baseUriEndpoint + \"/groups\" + component;\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetGroupDetailsById(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetTeamDetailsByID(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateGroup(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //Create Body for GROUP POST\r\n    var data = JSON.stringify({\r\n        \"description\": properties[TeamDescription],\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"groupTypes\": [\"Unified\"],\r\n        \"mailEnabled\": properties[TeamMailEnabled],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"visibility\": \"Private\",\r\n        \"securityEnabled\": false\r\n    });\r\n    var url = baseUriEndpoint + \"/groups/\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"memberSettings\": {\r\n    //         \"allowCreateUpdateChannels\": true\r\n    //     },\r\n    //     \"messagingSettings\": {\r\n    //         \"allowUserEditMessages\": true,\r\n    //         \"allowUserDeleteMessages\": true\r\n    //     },\r\n    //     \"funSettings\": {\r\n    //         \"allowGiphy\": true,\r\n    //         \"giphyContentRating\": \"strict\"\r\n    //     }\r\n    // });\r\n    var data = JSON.stringify({});\r\n    var url = baseUriEndpoint + \"/groups/\" + properties[TeamId] + \"/team\";\r\n    ExecuteRequest(url, data, \"PUT\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ArchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"shouldSetSpoSiteReadOnlyForMembers\": true\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/archive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UnarchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/unarchive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UpdateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //TODO - define properties that has to be updated\r\n    var data = JSON.stringify({\r\n        \"memberSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamMsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamMsAllowDeleteChannels],\r\n            \"allowAddRemoveApps\": properties[TeamMsAllowAddRemoveApps],\r\n            \"allowCreateUpdateRemoveTabs\": properties[TeamMsAllowCreateUpdateRemoveTabs],\r\n            \"allowCreateUpdateRemoveConnectors\": properties[TeamMsAllowCreateUpdateRemoveConnectors]\r\n        },\r\n        \"guestSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamGsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamGsAllowDeleteChannels]\r\n        },\r\n        \"messagingSettings\": {\r\n            \"allowUserEditMessages\": properties[TeamMsgAllowUserEditMessages],\r\n            \"allowUserDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowOwnerDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowTeamMentions\": properties[TeamMsgAllowTeamMentions],\r\n            \"allowChannelMentions\": properties[TeamMsgAllowChannelMentions]\r\n        },\r\n        \"funSettings\": {\r\n            \"allowGiphy\": properties[TeamFsAllowGiphy],\r\n            \"allowStickersAndMemes\": properties[TeamFsAllowStickersAndMemes],\r\n            \"allowCustomMemes\": properties[TeamFsAllowCustomMemes]\r\n        }\r\n    });\r\n    var url = baseUriEndpoint + \"/teams/\" + properties[TeamId];\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CloneTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"description\": properties[TeamDescription],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"partsToClone\": \"apps,tabs,settings,channels,members\",\r\n        \"visibility\": \"public\"\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/clone\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamUserPrincipalName = properties[TeamUserPrincipalName];\r\n    if (!(typeof teamUserPrincipalName === \"string\")) throw new Error(\"properties[TeamUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(teamUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelUserPrincipalName = properties[ChannelUserPrincipalName];\r\n    if (!(typeof channelUserPrincipalName === \"string\")) throw new Error(\"properties[ChannelUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(channelUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupOwner(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/users/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/owners/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddChannelMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n        \"roles\": [],\r\n        \"user@odata.bind\": baseUriEndpoint + \"/users('\" + properties[ChannelUserId] + \"')\"\r\n    });\r\n\r\n    let teamId = properties[ChannelTeamId];\r\n    let channelId = properties[ChannelId];\r\n\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(teamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/members\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n// DELETE /groups/{id}/members/{id}/$ref\r\nfunction RemoveGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + parameters[TeamUserId]\r\n    // });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    let teamUserId = properties[TeamUserId];\r\n    if (!(typeof teamUserId === \"string\")) throw new Error(\"properties[TeamUserId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/\" + encodeURIComponent(teamUserId) + \"/$ref\";\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ExecuteRequest(url: string, data: string, requestType: string, cb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState !== 4)\r\n            return;\r\n        if (xhr.status == 201) {\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            var obj = JSON.parse(xhr.responseText);\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 204) {\r\n            if (typeof cb === 'function')\r\n                cb(xhr.responseText);\r\n        }\r\n        else if (xhr.status == 200) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            //console.log(\"ExecuteRequest cb type of: \" + (typeof cb).toString());\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 202) {\r\n            if (typeof cb === 'function')\r\n                cb(null);\r\n        }\r\n        else if (xhr.status == 400) {\r\n            // This is a bad request, return error to UI\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n        }\r\n        else if (xhr.status == 404) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            // This is to supress an error that happens with team archive/unarchive\r\n            var errorMessage = obj.error.message;\r\n            if (errorMessage.startswith == \"No Team found with Group id\") {\r\n                // do nothing - supress error\r\n            }\r\n            else {\r\n                throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            }\r\n            //console.log(\"MSTeamsConnector ExecuteRequest: Failed with 404 error.\");\r\n            //throw new Error(obj.error.code + \" error: \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n        }\r\n        else {\r\n            postResult({\r\n                //TeamIsSuccessful: false\r\n            });\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n        }\r\n    };\r\n    console.log(\"MSTeamsConnector ExecuteRequest: \" + url);\r\n    xhr.open(requestType.toUpperCase(), url);\r\n    // Authentication Header\r\n    xhr.withCredentials = true;\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    if (requestType.toUpperCase() == \"PUT\" || requestType.toUpperCase() == \"POST\" || requestType.toUpperCase() == \"PATCH\") {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    }\r\n    xhr.send(data);\r\n}\r\n\r\nfunction CreateAndReturnTeamObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    postResult({\r\n        [TeamId]: properties[TeamId],\r\n        [TeamDisplayName]: properties[TeamDisplayName],\r\n        [TeamCreationDate]: properties[TeamCreationDate],\r\n        [TeamDescription]: properties[TeamDescription],\r\n        [TeamEmail]: properties[TeamEmail],\r\n        [TeamMailEnabled]: properties[TeamMailEnabled],\r\n        [TeamMailNickname]: properties[TeamMailNickname],\r\n        [TeamWeburl]: properties[TeamWeburl],\r\n        [TeamArchiveStatus]: properties[TeamArchiveStatus],\r\n        [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAdd(parameters: SingleRecord, properties: SingleRecord) {\r\n    //TODO - Should we make a call to Get Group Details by ID to get the team object details - for returning back to K2 user\r\n    // Add Team to a group\r\n    CreateTeam(parameters, properties, function (b) {\r\n        properties[TeamWeburl] = b.webUrl;\r\n        // Get user\r\n        GetUser(parameters, properties, function (c) {\r\n            properties[TeamUserId] = c.id;\r\n            // Add Owner\r\n            AddGroupOwner(parameters, properties, function (d) {\r\n                // Add Owner As Member\r\n                AddGroupMembers(parameters, properties, function (e) {\r\n                    //Return Team Object\r\n                    CreateAndReturnTeamObject(parameters, properties);\r\n                });\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTeam(parameters, properties, function (c) {\r\n        if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n            postResult({\r\n                [TeamIsSuccessful]: true\r\n            });\r\n        }\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamMyTeamsList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetMyTeams(parameters, properties, function (a) {\r\n        //console.log(a);\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamDescription]: x.description,\r\n                [TeamIsArchived]: x.isArchived\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTeams(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamResourceProvisioningOptions]: x.resourceProvisioningOptions[0]\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction GetTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    if (parameters[TeamDisplayNameStartsWith] == null || parameters[TeamDisplayNameStartsWith] == \"\") {\r\n        let component = \"?$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    else {\r\n        let teamDisplayNameStartsWith = parameters[TeamDisplayNameStartsWith];\r\n        if (!(typeof teamDisplayNameStartsWith === \"string\")) throw new Error(\"parameters[TeamDisplayNameStartsWith] is not of type string\");\r\n\r\n        let component = \"?$filter=startswith(displayName, '\" + encodeURIComponent(teamDisplayNameStartsWith) + \"')&$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetMyTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var url = baseUriEndpoint + \"/me/joinedTeams\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamArchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    ArchiveTeam(parameters, properties, function (b) {\r\n        // CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUnarchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    UnarchiveTeam(parameters, properties, function (b) {\r\n        CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction CheckArchivalStatus(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamArchiveOperationUrl = parameters[TeamArchiveOperationUrl];\r\n    if (!(typeof teamArchiveOperationUrl === \"string\")) throw new Error(\"parameters[TeamArchiveOperationUrl] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/\" + encodeURIComponent(teamArchiveOperationUrl);\r\n    ExecuteRequest(url, data, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCheckStatus(parameters: SingleRecord, properties: SingleRecord) {\r\n    CheckArchivalStatus(parameters, properties, function (b) {\r\n        postResult({\r\n            [TeamOperationId]: b.id,\r\n            [TeamOperationType]: b.operationType,\r\n            [TeamCreationDate]: b.createdDateTime,\r\n            [TeamArchiveStatus]: b.status,\r\n            [TeamLastActionDate]: b.lastActionDateTime,\r\n            [TeamAttemptsCount]: b.attemptsCount,\r\n            [TeamTargetResourceId]: b.targetResourceId,\r\n            [TeamTargetResourceLocation]: b.targetResourceLocation,\r\n            [TeamArchiveError]: b.error\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamClone(parameters: SingleRecord, properties: SingleRecord) {\r\n    CloneTeam(parameters, properties, function (b) {\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannel(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[ChannelIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[ChannelIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case ChannelGet:\r\n            onexecuteChannelGet(parameters, properties);\r\n            break;\r\n        case ChannelList:\r\n            onexecuteChannelList(parameters, properties);\r\n            break;\r\n        case ChannelCreate:\r\n            onexecuteChannelCreate(parameters, properties);\r\n            break;\r\n        case ChannelDelete:\r\n            onexecuteChannelDelete(parameters, properties);\r\n            break;\r\n        case ChannelUpdate:\r\n            onexecuteChannelUpdate(parameters, properties);\r\n            break;\r\n        case ChannelAddMember:\r\n            onexecuteChannelAddMember(parameters, properties);\r\n            break;\r\n        case ChannelSendMessage:\r\n            onexecuteSendMessage(parameters, properties);\r\n            break;\r\n        case ChannelReplyMessage:\r\n            onexecuteReplyMessage(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The channel method \" + methodName + \" is not supported...\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        properties[TeamUserId] = b.id;\r\n        AddGroupMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelUser(parameters, properties, function (b) {\r\n        properties[ChannelUserPrincipalName] = b.userPrincipalName;\r\n        properties[ChannelUserId] = b.id;\r\n        AddChannelMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [ChannelIsSuccessful]: true\r\n                });\r\n           }\r\n       });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamRemoveMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        RemoveGroupMembers(parameters, properties, function (c) {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAddOwner(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        AddGroupOwner(parameters, properties, function (c) {\r\n            // console.log(\"**after AddGroupOwner\" + c.id + \",\" + c.userPrincipalName);\r\n            // var stringValue = String(parameters[TeamAddAsMemberAlso]);\r\n            // var boolValue = stringValue.toLowerCase() == 'true' ? true : false;\r\n            // console.log(boolValue);\r\n            // if (boolValue) {\r\n            //     AddGroupMembers(parameters, properties, function (d) {\r\n            //         if (d.responseText == null || d.responseText == \"\" || d.responseText == undefined || d.responseText == \"undefined\") {\r\n            //             postResult({\r\n            //                 [TeamIsSuccessful]: true\r\n            //             });\r\n            //         }\r\n            //     });\r\n            // }\r\n            // else {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[ChannelIsSuccessful] = true;\r\n    GetChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id,\r\n            properties[ChannelDisplayName] = a.displayName,\r\n            properties[ChannelDescription] = a.description,\r\n            properties[ChannelEmail] = a.email,\r\n            properties[ChannelWeburl] = a.webUrl\r\n        //Post Results\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [ChannelId]: x.id,\r\n                [ChannelDisplayName]: x.displayName,\r\n                [ChannelDescription]: x.description,\r\n                [ChannelEmail]: x.email\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    CreateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteChannel(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction DeleteChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription],\r\n        \"membershipType\": properties[MembershipType]\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateAndReturnChannelObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    //var ChannelId = String(properties[ChannelId]);\r\n    // if (ChannelId == null || ChannelId == \"undefined\" || ChannelId == \"\" || ChannelId == undefined)\r\n    //     parameters[ChannelId] = properties[ChannelId];\r\n    postResult({\r\n        [ChannelId]: properties[ChannelId],\r\n        [ChannelDisplayName]: properties[ChannelDisplayName],\r\n        [ChannelDescription]: properties[ChannelDescription],\r\n        [ChannelEmail]: properties[ChannelEmail],\r\n        [ChannelWeburl]: properties[ChannelWeburl],\r\n        [ChannelIsSuccessful]: properties[ChannelIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction GetChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels?$select=id, displayname, description, email\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UpdateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription]\r\n        //\"email\": \"test@k2rocks.com\" TODO: Pass the correct parameter here\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteSendMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    SendMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true,\r\n            [ChannelMessageId]: a.id\r\n        });\r\n    });\r\n}\r\n\r\nfunction SendMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var importance = properties[ChannelMessageIsImportant] == \"true\" ? \"High\" : \"Normal\";\r\n    var obj = {\r\n        \"subject\": properties[ChannelMessageSubject],\r\n        \"importance\": importance.toString(),\r\n        \"body\": {\r\n            \"contentType\": \"html\",\r\n            \"content\": properties[ChannelMessageBody]\r\n        },\r\n        \"mentions\": [{\r\n            \"id\": 0,\r\n            \"mentionText\": \"Ernie Hayter\",\r\n            \"mentioned\": {\r\n                \"application\": null,\r\n                \"device\": null,\r\n                \"conversation\": null,\r\n                \"user\": {\r\n                    \"id\": \"9d3824b5-8d42-458a-8275-7a60037ad925\",\r\n                    \"displayName\": \"Ernie Hayter\",\r\n                    \"userIdentityType\": \"aadUser\"\r\n                }\r\n            }\r\n        }]\r\n    };\r\n\r\n    //if (properties[ChannelMessageBody].toString().indexOf(\"<at\") > -1)\r\n    //{\r\n     //   obj.mentions = GetMentions(properties, \"\" + properties[ChannelMessageBody]);\r\n    //}\r\n\r\n    var data = JSON.stringify(obj);\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetMentions(properties, message)\r\n{\r\n    var mentions = [];\r\n    \r\n    //var matches = message.match(/<at[^>]*>.*?<\\/at>/gm);\r\n\r\n    //for (let i = 0; i < matches.length; i++)\r\n    //{\r\n        //properties[ChannelUserPrincipalName] = matches[i].replace(/<[^>]+>/g, '');\r\n\r\n        //GetChannelUser(null, properties, function (b) {\r\n            var mentionObj = {\r\n                \"id\": 0,\r\n                \"mentionText\": \"Ernie Hayter\",\r\n                \"mentioned\": {\r\n                    \"application\": null,\r\n                    \"device\": null,\r\n                    \"conversation\": null,\r\n                    \"user\": {\r\n                        \"id\": \"9d3824b5-8d42-458a-8275-7a60037ad925\",\r\n                        \"displayName\": \"Ernie Hayter\",\r\n                        \"userIdentityType\": \"aadUser\"\r\n                    }\r\n                }\r\n            };\r\n            mentions.push(mentionObj);\r\n        //});\r\n    //}\r\n\r\n    return mentions;\r\n}\r\n\r\nfunction onexecuteReplyMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    ReplyMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction ReplyMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"body\": {\r\n            \"contentType\": \"html\",\r\n            \"content\": properties[ChannelMessageBody]\r\n        }\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    let channelMessageId = properties[ChannelMessageId];\r\n    if (!(typeof channelMessageId === \"string\")) throw new Error(\"properties[ChannelMessageId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages/\" + + encodeURIComponent(channelMessageId) + \"/replies\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabInformation(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabTeamsAppAppId]: a.teamsApp.id,\r\n            [TabTeamsAppExternalId]: a.teamsApp.externalId,\r\n            [TabTeamsAppAppDisplayName]: a.teamsApp.displayName,\r\n            [TabTeamsAppDistMethod]: a.teamsApp.distributionMethod,\r\n            [TabSortOrderIndex]: a.sortOrderIndex,\r\n            [TabWeburl]: a.webUrl\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetTabInformation(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId) + \"?$expand=teamsApp\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTab(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction UpdateTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TabDisplayName]\r\n    });\r\n\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TabId]: x.id,\r\n                [TabDisplayName]: x.displayName,\r\n                [TabWeburl]: x.webUrl\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTabCreate(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case TabCreateWordTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Word\", properties));\r\n            break;\r\n        case TabCreateExcelTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Excel\", properties));\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerPoint\", properties));\r\n            break;\r\n        case TabCreatePdfTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PDF\", properties));\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"OneNote\", properties));\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Planner\", properties));\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"SharePoint\", properties));\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftForms\", properties));\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftStream\", properties));\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Website\", properties));\r\n            break;\r\n        case TabCreateWikiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Wiki\", properties));\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerBI\", properties));\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"DocumentLibrary\", properties));\r\n            break;\r\n        case TabCreateCustomTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Custom\", properties));\r\n            break;\r\n        default: throw new Error(\"The object \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\n\r\nfunction prepareDataAndCreateTab(parameters: SingleRecord, properties: SingleRecord, requestBody: string) {\r\n    CreateTab(parameters, properties, requestBody, function (a) {\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabWeburl]: a.webUrl,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction CreateTab(parameters: SingleRecord, properties: SingleRecord, data: string, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction getRequestBody(tabType: string, properties) {\r\n    var data;\r\n    switch (tabType) {\r\n        case \"Word\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.word\"\r\n            });\r\n            break;\r\n        case \"Excel\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.excel\"\r\n            });\r\n            break;\r\n        case \"Powerpoint\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.powerpoint\"\r\n            });\r\n            break;\r\n        case \"PDF\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.pdf\"\r\n            });\r\n            break;\r\n        case \"OneNote\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/0d820ecd-def2-4297-adad-78056cde7c78\"\r\n            });\r\n            break;\r\n        case \"Planner\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.planner\"\r\n            });\r\n            break;\r\n        case \"SharePoint\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/2a527703-1f6f-4559-a332-d8a7d288cd88\"\r\n            });\r\n            break;\r\n        case \"MicrosoftForms\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/81fef3a6-72aa-4648-a763-de824aeafb7d\"\r\n            });\r\n            break;\r\n        case \"MicrosoftStream\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoftstream.embed.skypeteamstab\"\r\n            });\r\n            break;\r\n        case \"Website\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\"\r\n            });\r\n            break;\r\n        case \"Wiki\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.wiki\"\r\n            });\r\n            break;\r\n        case \"PowerBI\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.powerbi\"\r\n            });\r\n            break;\r\n        case \"DocumentLibrary\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.files.sharepoint\"\r\n            });\r\n            break;\r\n        case \"Custom\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/\" + properties[TabTeamsAppAppId]\r\n            });\r\n            break;\r\n        default: throw new Error(\"Tab Type is not supported or app is not installed!\");\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction onexecuteTabDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteTab(parameters, properties, function (a) {\r\n        if (a == null || a == \"\") {\r\n            postResult({\r\n                [TabIsSuccessful]: true\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction DeleteTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction GetInstalledAppList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let appTeamId = properties[AppTeamId];\r\n    if (!(typeof appTeamId === \"string\")) throw new Error(\"properties[AppTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(appTeamId) + \"/installedApps?$expand=teamsAppDefinition\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction onexecuteInstalledAppList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetInstalledAppList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [AppId]: x.id,\r\n                [AppDisplayName]: x.teamsAppDefinition.displayName,\r\n                [AppVersion]: x.teamsAppDefinition.version,\r\n                [AppTeamAppDefinitionId]: x.teamsAppDefinition.id,\r\n                [AppTeamsAppId]: x.teamsAppDefinition.teamsAppId\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction GetTabList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs?$select=id,displayName,webUrl\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}"],"names":["metadata","systemName","displayName","description","baseUriEndpoint","CreateTeam","parameters","properties","cb","data","JSON","stringify","ExecuteRequest","responseText","GetUser","teamUserPrincipalName","Error","encodeURIComponent","AddGroupOwner","teamId","AddGroupMembers","url","requestType","xhr","XMLHttpRequest","onreadystatechange","readyState","status","obj","parse","error","code","message","postResult","startswith","console","log","open","toUpperCase","withCredentials","setRequestHeader","send","CreateAndReturnTeamObject","CreateAndReturnChannelObject","onexecuteTabCreate","methodName","prepareDataAndCreateTab","getRequestBody","requestBody","tabTeamId","tabChannelId","CreateTab","a","id","webUrl","configuration","entityId","contentUrl","websiteUrl","removeUrl","tabType","ondescribe","postSchema","objects","type","methods","inputs","requiredInputs","outputs","onexecute","objectName","GetGroupDetailsById","b","createdDateTime","mail","mailEnabled","mailNickname","GetTeamDetailsByID","c","isArchived","onexecuteTeamGet","CreateGroup","onexecuteTeamCreate","d","e","onexecuteTeamAdd","UpdateTeam","undefined","onexecuteTeamUpdate","teamDisplayNameStartsWith","component","GetTeams","value","map","x","resourceProvisioningOptions","onexecuteTeamList","ArchiveTeam","onexecuteTeamArchive","UnarchiveTeam","onexecuteTeamUnarchive","userPrincipalName","onexecuteTeamAddMember","teamUserId","RemoveGroupMembers","onexecuteTeamRemoveMember","CloneTeam","onexecuteTeamClone","onexecuteTeamAddOwner","teamArchiveOperationUrl","CheckArchivalStatus","operationType","lastActionDateTime","attemptsCount","targetResourceId","targetResourceLocation","onexecuteTeamCheckStatus","onexecuteTeam","channelTeamId","channelId","GetChannel","email","onexecuteChannelGet","GetChannelList","onexecuteChannelList","CreateChannel","onexecuteChannelCreate","DeleteChannel","onexecuteChannelDelete","UpdateChannel","onexecuteChannelUpdate","channelUserPrincipalName","GetChannelUser","baseUriEndpointBeta","AddChannelMembers","onexecuteChannelAddMember","importance","toString","SendMessage","onexecuteSendMessage","channelMessageId","ReplyMessage","onexecuteReplyMessage","onexecuteChannel","tabId","GetTabInformation","teamsApp","externalId","distributionMethod","sortOrderIndex","onexecuteTabGet","UpdateTab","onexecuteTabUpdate","GetTabList","onexecuteTabList","DeleteTab","onexecuteTabDelete","onexecuteTab","appTeamId","GetInstalledAppList","teamsAppDefinition","version","teamsAppId","onexecuteInstalledAppList","onexecuteApp"],"mappings":"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"}