{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    systemName: \"MSTeamsJSSP\",\r\n    displayName: \"Microsoft Teams Connector\",\r\n    description: \"A connector for Microsoft Teams\"\r\n};\r\n\r\n// Constants\r\nconst baseUriEndpoint = \"https://graph.microsoft.com/v1.0\";\r\nconst baseUriEndpointBeta = \"https://graph.microsoft.com/beta\";\r\n\r\n//\r\n// Objects\r\n\r\nconst Team = \"team\";\r\nconst Channel = \"channel\";\r\nconst Tab = \"tab\";\r\nconst App = \"app\";\r\nconst Token = \"token\";\r\nconst Drive = \"drive\";\r\n\r\n//\r\n// Team\r\nconst TeamId = \"id\";\r\nconst TeamWeburl = \"weburl\";\r\nconst TeamDisplayName = \"displayName\";\r\nconst TeamCreationDate = \"creationDate\"\r\nconst TeamDescription = \"description\";\r\nconst TeamEmail = \"email\";\r\nconst TeamMailEnabled = \"mailEnabled\";\r\nconst TeamMailNickname = \"mailNickname\";\r\nconst TeamArchiveStatus = \"archiveStatus\";\r\nconst TeamOperationId = \"operationId\";\r\nconst TeamOperationType = \"operationType\";\r\nconst TeamLastActionDate = \"lastActionDate\";\r\nconst TeamAttemptsCount = \"attemptsCount\";\r\nconst TeamTargetResourceId = \"targetResourceId\";\r\nconst TeamTargetResourceLocation = \"targetResourceLocation\";\r\nconst TeamArchiveError = \"archiveError\";\r\nconst TeamUserPrincipalName = \"userPrincipalName\";\r\nconst TeamResourceProvisioningOptions = \"resourceProvisioningOptions\";\r\nconst TeamIsArchived = \"isArchived\";\r\nconst TeamIsSuccessful = \"isSuccessful\";\r\nconst TeamRequestStatusUrl = \"requestStatusUrl\";\r\nconst TeamMsAllowCreateUpdateChannels = \"msAllowCreateUpdateChannels\";\r\nconst TeamMsAllowDeleteChannels = \"msAllowDeleteChannels\";\r\nconst TeamMsAllowAddRemoveApps = \"msAllowAddRemoveApps\";\r\nconst TeamMsAllowCreateUpdateRemoveTabs = \"msAllowCreateUpdateRemoveTabs\";\r\nconst TeamMsAllowCreateUpdateRemoveConnectors = \"msAllowCreateUpdateRemoveConnectors\";\r\nconst TeamGsAllowCreateUpdateChannels = \"gsAllowCreateUpdateChannels\";\r\nconst TeamGsAllowDeleteChannels = \"gsAllowDeleteChannels\";\r\nconst TeamMsgAllowUserEditMessages = \"msgsAllowUserEditMessages\";\r\nconst TeamMsgAllowUserDeleteMessages = \"msgsAllowUserDeleteMessages\";\r\nconst TeamMsgAllowOwnerDeleteMessages = \"msgsAllowOwnerDeleteMessages\";\r\nconst TeamMsgAllowTeamMentions = \"msgsAllowTeamMentions\";\r\nconst TeamMsgAllowChannelMentions = \"msgsAllowChannelMentions\";\r\nconst TeamFsAllowGiphy = \"fsAllowGiphy\";\r\nconst TeamFsAllowStickersAndMemes = \"fsAllowStickersAndMemes\";\r\nconst TeamFsAllowCustomMemes = \"fsAllowCustomMemes\";\r\n\r\nconst TeamGet = \"get\";\r\nconst TeamCreate = \"create\";\r\nconst TeamAdd = \"add\"; //  not used\r\nconst TeamArchive = \"archive\";\r\nconst TeamUnarchive = \"unarchive\";\r\nconst TeamCheckStatus = \"checkStatus\"; // not used\r\nconst TeamAddMember = \"addMember\";\r\nconst TeamRemoveMember = \"removeMember\";\r\nconst TeamUpdate = \"update\";\r\nconst TeamClone = \"clone\";\r\nconst TeamAddOwner = \"addOwner\";\r\nconst TeamList = \"list\";\r\nconst TeamMyTeamsList = \"myTeamsList\";\r\n\r\nconst TeamArchiveOperationUrl = \"archiveOperationUrl\";\r\nconst TeamAddAsMemberAlso = \"addAsMemberAlso\"; //  not used\r\nconst TeamDisplayNameStartsWith = \"displayNameStartsWith\";\r\nconst TeamUserId = \"userId\";\r\n\r\n//\r\n// Channel\r\nconst ChannelId = \"id\";\r\nconst ChannelDisplayName = \"displayName\";\r\nconst ChannelDescription = \"description\";\r\nconst ChannelEmail = \"email\";\r\nconst ChannelWeburl = \"weburl\";\r\nconst ChannelIsSuccessful = \"isSuccessful\";\r\nconst ChannelTeamId = \"teamId\";\r\nconst ChannelMessageSubject = \"messageSubject\";\r\nconst ChannelMessageBody = \"messageBody\";\r\nconst ChannelMessageId = \"messageId\";\r\nconst ChannelMessageIsImportant = \"messageIsImportant\";\r\nconst MembershipType = \"membershipType\";\r\nconst ChannelUserPrincipalName = \"userPrincipalName\";\r\nconst ChannelUserId = \"userId\";\r\nconst ChannelMessageUser = \"messageUser\";\r\nconst ChannelMessageDate = \"messageDate\";\r\nconst ChannelDriveId = \"channelDriveId\";\r\nconst ChannelDriveUrl = \"channelDriveUrl\";\r\n\r\nconst ChannelGet = \"get\";\r\nconst ChannelList = \"list\";\r\nconst ChannelCreate = \"create\";\r\nconst ChannelDelete = \"delete\";\r\nconst ChannelUpdate = \"update\";\r\nconst ChannelSendMessage = \"sendMessage\";\r\nconst ChannelSendAdaptiveCard = \"sendAdaptiveCard\";\r\nconst ChannelReplyMessage = \"replyMessage\";\r\nconst ChannelAddMember = \"addMember\";\r\nconst ChannelMessages = \"getMessages\";\r\nconst ChannelGetDrive = \"getDrive\";\r\n\r\n\r\n//\r\n// Tab\r\nconst TabId = \"id\";\r\nconst TabDisplayName = \"displayName\";\r\nconst TabWeburl = \"weburl\";\r\nconst TabConfigEntityId = \"configEntityId\";\r\nconst TabConfigContentUrl = \"configContentUrl\";\r\nconst TabConfigWebsiteUrl = \"configWebsiteUrl\";\r\nconst TabConfigRemoveUrl = \"configRemoveUrl\";\r\nconst TabTeamsAppAppId = \"teamsAppAppId\";\r\nconst TabTeamsAppExternalId = \"teamsAppExternalId\";\r\nconst TabTeamsAppAppDisplayName = \"teamsAppAppDisplayName\";\r\nconst TabTeamsAppDistMethod = \"teamsAppDistMethod\";\r\nconst TabSortOrderIndex = \"sortOrderIndex\";\r\nconst TabIsSuccessful = \"isSuccessful\";\r\nconst TabTeamId = \"teamId\";\r\nconst TabChannelId = \"channelId\";\r\n\r\nconst TabGet = \"get\";\r\nconst TabList = \"list\";\r\nconst TabCreateWordTab = \"createWordTab\";\r\nconst TabCreateExcelTab = \"createExcelTab\";\r\nconst TabCreatePowerPointTab = \"createPowerPointTab\";\r\nconst TabCreatePdfTab = \"createPdfTab\";\r\nconst TabCreateOneNoteTab = \"createOneNoteTab\";\r\nconst TabCreatePlannerTab = \"createPlannerTab\";\r\nconst TabCreateSharePointTab = \"createSharePointTab\";\r\nconst TabCreateMsFormsTab = \"createMsFormsTab\";\r\nconst TabCreateMsStreamTab = \"createStreamTab\";\r\nconst TabCreateWebsiteTab = \"createWebsiteTab\";\r\nconst TabCreateWikiTab = \"createWikiTab\";\r\nconst TabCreatePowerBiTab = \"createPowerBiTab\";\r\nconst TabCreateDocumentLibraryTab = \"createDocumentLibraryTab\";\r\nconst TabCreateCustomTab = \"createCustomTab\";\r\nconst TabDelete = \"delete\";\r\nconst TabUpdate = \"update\";\r\n\r\n//\r\n// App\r\nconst AppId = \"id\";\r\nconst AppTeamId = \"teamId\";\r\nconst AppDisplayName = \"displayName\";\r\nconst AppVersion = \"version\";\r\nconst AppTeamAppDefinitionId = \"teamsAppDefinitionId\";\r\nconst AppTeamsAppId = \"teamsAppId\";\r\n\r\nconst AppList = \"list\";\r\n\r\n//\r\n// Token\r\nconst TokenLifetime = \"tokenLifeTime\";\r\nconst TokenPolicyDisplayName = \"displayName\";\r\nconst TokenOrganizationDefault = \"isOrganizationDefault\";\r\nconst TokenUpdateSuccess = \"updateSuccess\";\r\n\r\nconst TokenPolicySet = \"setToken\";\r\n\r\n//\r\n//Drive\r\nconst DriveId = \"driveId\";\r\nconst DriveRelativePath = \"drivePath\";\r\nconst DriveChildId = \"driveChildId\";\r\nconst DriveChildWebUrl = \"driveChildWebUrl\";\r\nconst DriveChildDownloadUrl = \"driveChildDownloadUrl\";\r\nconst DriveChildFileName = \"driveChildFileName\";\r\nconst DriveChildFolderName = \"driveChildFolderName\";\r\nconst DriveChildFileCreated = \"driveChildFileCreatedDate\";\r\nconst DriveChildFileCreatedBy = \"driveChildFileCreatedBy\";\r\nconst DriveChildFileType = \"driveChildFileType\";\r\n\r\nconst DriveGetRootChildren = \"driveGetRootChildren\";\r\n\r\n\r\n//OnDescribe\r\nondescribe = function () {\r\n    postSchema({\r\n\r\n        objects: {\r\n            [Team]: {\r\n                displayName: \"Team\",\r\n                description: \"Team\",\r\n                properties: {\r\n                    [TeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamWeburl]: {\r\n                        displayName: \"Web Url\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamCreationDate]: {\r\n                        displayName: \"Created On\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDescription]: {\r\n                        displayName: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamEmail]: {\r\n                        displayName: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamMailEnabled]: {\r\n                        displayName: \"Mail Enabled\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMailNickname]: {\r\n                        displayName: \"Mail Nickname\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveStatus]: {\r\n                        displayName: \"Archive Status\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationId]: {\r\n                        displayName: \"Operation Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationType]: {\r\n                        displayName: \"Operation Type\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamLastActionDate]: {\r\n                        displayName: \"Last Action Date\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamAttemptsCount]: {\r\n                        displayName: \"Attempts Count\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceId]: {\r\n                        displayName: \"Target Resource Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceLocation]: {\r\n                        displayName: \"Target Resource Location\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveError]: {\r\n                        displayName: \"Error\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamResourceProvisioningOptions]: {\r\n                        displayName: \"Resource Provisioning Options\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamIsArchived]: {\r\n                        displayName: \"Is Archived\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamRequestStatusUrl]: {\r\n                        displayName: \"Request Status Url\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowAddRemoveApps]: {\r\n                        displayName: \"Allow add/remove apps to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveTabs]: {\r\n                        displayName: \"Allow create/update/remove tabs to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveConnectors]: {\r\n                        displayName: \"Allow create/update/remove connectors to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserEditMessages]: {\r\n                        displayName: \"Allow user to edit messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserDeleteMessages]: {\r\n                        displayName: \"Allow user to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowOwnerDeleteMessages]: {\r\n                        displayName: \"Allow owner to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowTeamMentions]: {\r\n                        displayName: \"Allow team mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowChannelMentions]: {\r\n                        displayName: \"Allow channel mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowGiphy]: {\r\n                        displayName: \"Allow Giphy\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowStickersAndMemes]: {\r\n                        displayName: \"Allow stickers and memes\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowCustomMemes]: {\r\n                        displayName: \"Allow custom memes\",\r\n                        type: \"boolean\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TeamGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Team\",\r\n                        type: \"read\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamArchiveStatus,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a Team\",\r\n                        type: \"create\",\r\n                        inputs: [\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamDisplayName,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    // [TeamAdd]: {\r\n                    //     displayName: \"Add\",\r\n                    //     description: \"Adds a Team to an existing group\",\r\n                    //     type: \"create\",\r\n                    //     inputs: [TeamId,\r\n                    //         TeamUserPrincipalName\r\n                    //     ],\r\n                    //     outputs: [TeamId,\r\n                    //         TeamDisplayName,\r\n                    //         TeamCreationDate,\r\n                    //         TeamDescription,\r\n                    //         TeamEmail,\r\n                    //         TeamMailEnabled,\r\n                    //         TeamMailNickname,\r\n                    //         TeamWeburl,\r\n                    //         TeamIsSuccessful\r\n                    //     ]\r\n                    // },\r\n                    [TeamArchive]: {\r\n                        displayName: \"Archive\",\r\n                        description: \"Archives a Team (makes it read-only)\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUnarchive]: {\r\n                        displayName: \"Unarchive\",\r\n                        description: \"Unarchives a Team\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    /*                     [TeamCheckStatus]: {\r\n                                            displayName: \"Check Status\",\r\n                                            description: \"Check the status of an Archive job.\",\r\n                                            type: \"execute\",\r\n                                            parameters: {\r\n                                                [TeamArchiveOperationUrl]: {\r\n                                                    displayName: \"Archive/Unarchive operation URL\",\r\n                                                    type: \"string\"\r\n                                                }\r\n                                            },\r\n                                            requiredParameters: [TeamArchiveOperationUrl],\r\n                                            outputs: [TeamOperationId,\r\n                                                TeamOperationType,\r\n                                                TeamCreationDate,\r\n                                                TeamArchiveStatus,\r\n                                                TeamLastActionDate,\r\n                                                TeamAttemptsCount,\r\n                                                TeamTargetResourceId,\r\n                                                TeamTargetResourceLocation,\r\n                                                TeamArchiveError\r\n                                            ]\r\n                                        }, */\r\n                    [TeamAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamRemoveMember]: { // TODO\r\n                        displayName: \"Remove Member\",\r\n                        description: \"Removes a member from a Team\",\r\n                        type: \"delete\",\r\n                        inputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        requiredInputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Team's settings\",\r\n                        type: \"update\",\r\n                        inputs: [TeamId,\r\n                            TeamMsAllowCreateUpdateChannels,\r\n                            TeamMsAllowDeleteChannels,\r\n                            TeamMsAllowAddRemoveApps,\r\n                            TeamMsAllowCreateUpdateRemoveTabs,\r\n                            TeamMsAllowCreateUpdateRemoveConnectors,\r\n                            TeamGsAllowCreateUpdateChannels,\r\n                            TeamGsAllowDeleteChannels,\r\n                            TeamMsgAllowUserEditMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowTeamMentions,\r\n                            TeamMsgAllowChannelMentions,\r\n                            TeamFsAllowGiphy,\r\n                            TeamFsAllowStickersAndMemes,\r\n                            TeamFsAllowCustomMemes\r\n                        ],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamClone]: {\r\n                        displayName: \"Copy/Clone\",\r\n                        description: \"Makes a copy of an existing Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamAddOwner]: {\r\n                        displayName: \"Add Owner\",\r\n                        description: \"Adds an Owner to a Team\",\r\n                        type: \"execute\",\r\n                        // parameters: {\r\n                        //     [TeamAddAsMemberAlso]: {\r\n                        //         displayName: \"Add as Member Also\",\r\n                        //         type: \"boolean\"\r\n                        //     }\r\n                        // },\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamList]: {\r\n                        displayName: \"List\",\r\n                        description: \"Lists all Teams and groups without Teams\",\r\n                        type: \"list\",\r\n                        parameters: {\r\n                            [TeamDisplayNameStartsWith]: {\r\n                                displayName: \"Display Name Starts With\",\r\n                                type: \"string\"\r\n                            }\r\n                        },\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamResourceProvisioningOptions\r\n                        ]\r\n                    },\r\n                    [TeamMyTeamsList]: {\r\n                        displayName: \"List My Teams\",\r\n                        description: \"Lists all Teams you belong to\",\r\n                        type: \"list\",\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamIsArchived\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            [Channel]: {\r\n                displayName: \"Channel\",\r\n                description: \"Channel\",\r\n                properties: {\r\n                    [ChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDescription]: {\r\n                        displayName: \"Description\",\r\n                        description: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelEmail]: {\r\n                        displayName: \"Email\",\r\n                        description: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageSubject]: {\r\n                        displayName: \"Subject\",\r\n                        description: \"Message Subject\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageId]: {\r\n                        displayName: \"Message Id\",\r\n                        description: \"Message Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageBody]: {\r\n                        displayName: \"Body\",\r\n                        description: \"Message Body\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageIsImportant]: {\r\n                        displayName: \"Is Important\",\r\n                        description: \"Message Importance (Normal/High)\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [MembershipType]: {\r\n                        displayName: \"Membership Type\",\r\n                        description: \"Type of Channel\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        description: \"Principal Name of User\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageDate]: {\r\n                        displayName: \"Message Date\",\r\n                        description: \"Message Date\",\r\n                        type: \"dateTime\"\r\n                    },\r\n                    [ChannelMessageUser]: {\r\n                        displayName: \"Message User\",\r\n                        description: \"Message User\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDriveId]: {\r\n                        displayName: \"Drive ID\",\r\n                        description: \"Drive ID\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDriveUrl]: {\r\n                        displayName: \"Drive URL\",\r\n                        description: \"Drive URL\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [ChannelGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Channel\",\r\n                        type: \"read\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List the channels in a Team\",\r\n                        type: \"list\",\r\n                        inputs: [ChannelTeamId],\r\n                        requiredInputs: [ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail\r\n                        ]\r\n                    },\r\n                    [ChannelCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a new Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType\r\n                        ],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelDelete]: {\r\n                        displayName: \"Delete\",\r\n                        description: \"Deletes a Channel\",\r\n                        type: \"delete\",\r\n                        inputs: [ChannelId,\r\n                            ChannelTeamId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Channel\",\r\n                        type: \"update\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelSendMessage]: {\r\n                        displayName: \"Send Message\",\r\n                        description: \"Sends a Message to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageSubject,\r\n                            ChannelMessageBody,\r\n                            ChannelMessageIsImportant\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful, ChannelMessageId]\r\n                    },\r\n                    [ChannelReplyMessage]: {\r\n                        displayName: \"Reply to a Message\",\r\n                        description: \"Reply to a Message in a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelSendAdaptiveCard]: {\r\n                        displayName: \"Send Adaptive Card\",\r\n                        description: \"Sends a Message to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful, ChannelMessageId]\r\n                    },\r\n                    [ChannelMessages]: {\r\n                        displayName: \"Get Messages in a Channel\",\r\n                        description: \"Get Messages in a Channel\",\r\n                        type: \"list\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        outputs: [ChannelMessageId, ChannelMessageBody, ChannelMessageDate, ChannelMessageUser]\r\n                    },\r\n                    [ChannelGetDrive]: {\r\n                        displayName: \"Get Channel Drive\",\r\n                        description: \"Get Channel Drive\",\r\n                        type: \"read\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        outputs: [ChannelDriveId, ChannelDriveUrl]\r\n                    }\r\n                }\r\n            },\r\n            [Tab]: {\r\n                displayName: \"Tab\",\r\n                description: \"Tab\",\r\n                properties: {\r\n                    [TabId]: {\r\n                        displayName: \"Tab Id\",\r\n                        description: \"Tab Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigEntityId]: {\r\n                        displayName: \"Entity Id\",\r\n                        description: \"Entity Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigContentUrl]: {\r\n                        displayName: \"Content URL\",\r\n                        description: \"Content URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigWebsiteUrl]: {\r\n                        displayName: \"Website URL\",\r\n                        description: \"Website URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigRemoveUrl]: {\r\n                        displayName: \"Remove URL\",\r\n                        description: \"Remove URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppExternalId]: {\r\n                        displayName: \"External Id\",\r\n                        description: \"External Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppDistMethod]: {\r\n                        displayName: \"Distribution Method\",\r\n                        description: \"Distribution Method\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabSortOrderIndex]: {\r\n                        displayName: \"Sort Order Index\",\r\n                        description: \"Sort Order Index\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TabTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TabGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Get the details of a tab.\",\r\n                        type: \"read\",\r\n                        inputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabTeamsAppAppId,\r\n                            TabTeamsAppExternalId,\r\n                            TabTeamsAppAppDisplayName,\r\n                            TabTeamsAppDistMethod,\r\n                            TabSortOrderIndex,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List tabs\",\r\n                        type: \"list\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabCreateWordTab]: {\r\n                        displayName: \"Create Word tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateExcelTab]: {\r\n                        displayName: \"Create Excel tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerPointTab]: {\r\n                        displayName: \"Create PowerPoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePdfTab]: {\r\n                        displayName: \"Create PDF tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateOneNoteTab]: {\r\n                        displayName: \"Create OneNote tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePlannerTab]: {\r\n                        displayName: \"Create Planner tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateSharePointTab]: {\r\n                        displayName: \"Create SharePoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsFormsTab]: {\r\n                        displayName: \"Create Forms tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsStreamTab]: {\r\n                        displayName: \"Create Stream tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWebsiteTab]: {\r\n                        displayName: \"Create Website tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWikiTab]: {\r\n                        displayName: \"Create Wiki tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerBiTab]: {\r\n                        displayName: \"Create PowerBI tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateDocumentLibraryTab]: {\r\n                        displayName: \"Create Document tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateCustomTab]: {\r\n                        displayName: \"Create custom tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabDelete]: {\r\n                        displayName: \"Delete tab\",\r\n                        type: \"delete\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabUpdate]: {\r\n                        displayName: \"Update tab\",\r\n                        type: \"update\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId,\r\n                            TabDisplayName,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [TabIsSuccessful]\r\n                    },\r\n                }\r\n            },\r\n            [App]: {\r\n                displayName: \"App\",\r\n                description: \"App\",\r\n                properties: {\r\n                    [AppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppVersion]: {\r\n                        displayName: \"version\",\r\n                        description: \"version\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamAppDefinitionId]: {\r\n                        displayName: \"Teams App Definition Id\",\r\n                        description: \"Teams App Definition Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamsAppId]: {\r\n                        displayName: \"Teams App Id\",\r\n                        description: \"Teams App Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [AppList]: {\r\n                        displayName: \"List installed apps\",\r\n                        type: \"list\",\r\n                        inputs: [AppTeamId],\r\n                        requiredInputs: [AppTeamId],\r\n                        outputs: [AppId,\r\n                            AppDisplayName,\r\n                            AppVersion,\r\n                            AppTeamAppDefinitionId,\r\n                            AppTeamsAppId\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            [Token]: {\r\n                displayName: \"Token\",\r\n                description: \"Token\",\r\n                properties: {\r\n                    [TokenLifetime]: {\r\n                        displayName: \"Token Lifetime (hh:mm:ss)\",\r\n                        description: \"Token Lifetime (hh:mm:ss)\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TokenPolicyDisplayName]: {\r\n                        displayName: \"Policy Display Name\",\r\n                        description: \"Policy Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TokenOrganizationDefault]: {\r\n                        displayName: \"Is Organization Default\",\r\n                        description: \"Is Organization Default\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TokenUpdateSuccess]: {\r\n                        displayName: \"Policy Update Success\",\r\n                        description: \"Policy Update Success\",\r\n                        type: \"boolean\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TokenPolicySet]: {\r\n                        displayName: \"Set Token Policy\",\r\n                        type: \"execute\",\r\n                        inputs: [TokenLifetime, TokenPolicyDisplayName, TokenOrganizationDefault],\r\n                        requiredInputs: [TokenLifetime, TokenPolicyDisplayName],\r\n                        outputs: [TokenUpdateSuccess]\r\n                    }\r\n                }\r\n            },\r\n            [Drive]: {\r\n                displayName: \"Drive\",\r\n                description: \"Drive\",\r\n                properties: {\r\n                    [DriveId]: {\r\n                        displayName: \"Drive ID\",\r\n                        description: \"Drive ID\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveRelativePath]: {\r\n                        displayName: \"Relative Path\",\r\n                        description: \"Relative Path\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildDownloadUrl]: {\r\n                        displayName: \"Download URL\",\r\n                        description: \"Download URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildFileCreated]: {\r\n                        displayName: \"Created Date\",\r\n                        description: \"Created Date\",\r\n                        type: \"dateTime\"\r\n                    },\r\n                    [DriveChildFileCreatedBy]: {\r\n                        displayName: \"Created By\",\r\n                        description: \"Created By\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildFileName]: {\r\n                        displayName: \"File Name\",\r\n                        description: \"File Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildFileType]: {\r\n                        displayName: \"File Type\",\r\n                        description: \"File Type\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildId]: {\r\n                        displayName: \"File ID\",\r\n                        description: \"File ID\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildWebUrl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [DriveChildFolderName]: {\r\n                        displayName: \"Folder Name\",\r\n                        description: \"Folder Name\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [DriveGetRootChildren]: {\r\n                        displayName: \"Get Drive Root Children\",\r\n                        type: \"list\",\r\n                        inputs: [DriveId],\r\n                        requiredInputs: [DriveId],\r\n                        outputs: [DriveChildId, DriveChildFolderName, DriveChildWebUrl]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\n// OnExecute\r\nonexecute = function ({ objectName, methodName, parameters, properties }) {\r\n    switch (objectName) {\r\n        case Team:\r\n            onexecuteTeam(methodName, parameters, properties);\r\n            break;\r\n        case Channel:\r\n            onexecuteChannel(methodName, parameters, properties);\r\n            break;\r\n        case Tab:\r\n            onexecuteTab(methodName, parameters, properties);\r\n            break;\r\n        case App:\r\n            onexecuteApp(methodName, parameters, properties);\r\n            break;\r\n        case Token:\r\n            onexecuteToken(methodName, parameters, properties);\r\n            break;\r\n        case Drive:\r\n            onexecuteDrive(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteApp(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case AppList:\r\n            onexecuteInstalledAppList(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteToken(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case TokenPolicySet:\r\n            onexecutePolicySet(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteDrive(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case DriveGetRootChildren:\r\n            onexecuteGetDriveRootChildren(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeam(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TeamIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TeamIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TeamGet:\r\n            onexecuteTeamGet(parameters, properties);\r\n            break;\r\n        case TeamCreate:\r\n            onexecuteTeamCreate(parameters, properties);\r\n            break;\r\n        case TeamAdd:\r\n            onexecuteTeamAdd(parameters, properties);\r\n            break;\r\n        case TeamUpdate:\r\n            onexecuteTeamUpdate(parameters, properties);\r\n            break;\r\n        case TeamList:\r\n            onexecuteTeamList(parameters, properties);\r\n            break;\r\n        case TeamArchive:\r\n            onexecuteTeamArchive(parameters, properties);\r\n            break;\r\n        case TeamUnarchive:\r\n            onexecuteTeamUnarchive(parameters, properties);\r\n            break;\r\n        case TeamAddMember:\r\n            onexecuteTeamAddMember(parameters, properties);\r\n            break;\r\n        case TeamRemoveMember:\r\n            onexecuteTeamRemoveMember(parameters, properties);\r\n            break;\r\n        case TeamClone:\r\n            onexecuteTeamClone(parameters, properties);\r\n            break;\r\n        case TeamAddOwner:\r\n            onexecuteTeamAddOwner(parameters, properties);\r\n            break;\r\n        case TeamMyTeamsList:\r\n            onexecuteTeamMyTeamsList(parameters, properties);\r\n            break;\r\n        case TeamCheckStatus:\r\n            onexecuteTeamCheckStatus(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTab(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TabIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TabIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TabGet:\r\n            onexecuteTabGet(parameters, properties);\r\n            break;\r\n        case TabUpdate:\r\n            onexecuteTabUpdate(parameters, properties);\r\n            break;\r\n        case TabList:\r\n            onexecuteTabList(parameters, properties);\r\n            break;\r\n        case TabDelete:\r\n            onexecuteTabDelete(parameters, properties);\r\n            break;\r\n        case TabCreateWordTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateExcelTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePdfTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWikiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateCustomTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[TeamIsSuccessful] = true;\r\n    //properties[TeamId] = properties[TeamId];\r\n    // Get Group Details By Group ID\r\n    GetGroupDetailsById(parameters, properties, function (b) {\r\n        properties[TeamDisplayName] = b.displayName;\r\n        properties[TeamCreationDate] = b.createdDateTime;\r\n        properties[TeamDescription] = b.description;\r\n        properties[TeamEmail] = b.mail;\r\n        properties[TeamMailEnabled] = b.mailEnabled;\r\n        properties[TeamMailNickname] = b.mailNickname;\r\n        //Get Team Details By Group ID\r\n        GetTeamDetailsByID(parameters, properties, function (c) {\r\n            properties[TeamWeburl] = c.webUrl;\r\n            properties[TeamArchiveStatus] = c.isArchived;\r\n            //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    // Create a Group, then add a team\r\n    properties[TeamIsSuccessful] = true;\r\n    CreateGroup(parameters, properties, function (a) {\r\n        //properties[TeamId] = parameters[TeamId] = a.id;\r\n        properties[TeamId] = a.id;\r\n        properties[TeamCreationDate] = a.createdDateTime;\r\n        properties[TeamDescription] = a.description;\r\n        properties[TeamDisplayName] = a.displayName;\r\n        properties[TeamEmail] = a.mail;\r\n        properties[TeamMailEnabled] = a.mailEnabled;\r\n        properties[TeamMailNickname] = a.mailNickname;\r\n        //Create a Team under the above Group\r\n        CreateTeam(parameters, properties, function (b) {\r\n            properties[TeamWeburl] = b.webUrl;\r\n            //Get User\r\n            // GetUser(parameters, properties, function (c) {\r\n            //     parameters[TeamUserId] = c.id;\r\n            //     //Add Group Owner\r\n            //     AddGroupOwner(parameters, properties, function (d) {\r\n            //         //Add Members to the Group\r\n            //         AddGroupMembers(parameters, properties, function (d) {\r\n            //             //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n            //         });\r\n            //     });\r\n            // });\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetGroupIdByMailNickName(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var component = encodeURIComponent(`?$filter=mailNickName&q='${properties[TeamMailNickname]}'`);\r\n    var url = baseUriEndpoint + \"/groups\" + component;\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetGroupDetailsById(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetTeamDetailsByID(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateGroup(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //Create Body for GROUP POST\r\n    var data = JSON.stringify({\r\n        \"description\": properties[TeamDescription],\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"groupTypes\": [\"Unified\"],\r\n        \"mailEnabled\": properties[TeamMailEnabled],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"visibility\": \"Private\",\r\n        \"securityEnabled\": false\r\n    });\r\n    var url = baseUriEndpoint + \"/groups/\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"memberSettings\": {\r\n    //         \"allowCreateUpdateChannels\": true\r\n    //     },\r\n    //     \"messagingSettings\": {\r\n    //         \"allowUserEditMessages\": true,\r\n    //         \"allowUserDeleteMessages\": true\r\n    //     },\r\n    //     \"funSettings\": {\r\n    //         \"allowGiphy\": true,\r\n    //         \"giphyContentRating\": \"strict\"\r\n    //     }\r\n    // });\r\n    var data = JSON.stringify({});\r\n    var url = baseUriEndpoint + \"/groups/\" + properties[TeamId] + \"/team\";\r\n    ExecuteRequest(url, data, \"PUT\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ArchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"shouldSetSpoSiteReadOnlyForMembers\": true\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/archive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UnarchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/unarchive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UpdateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //TODO - define properties that has to be updated\r\n    var data = JSON.stringify({\r\n        \"memberSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamMsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamMsAllowDeleteChannels],\r\n            \"allowAddRemoveApps\": properties[TeamMsAllowAddRemoveApps],\r\n            \"allowCreateUpdateRemoveTabs\": properties[TeamMsAllowCreateUpdateRemoveTabs],\r\n            \"allowCreateUpdateRemoveConnectors\": properties[TeamMsAllowCreateUpdateRemoveConnectors]\r\n        },\r\n        \"guestSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamGsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamGsAllowDeleteChannels]\r\n        },\r\n        \"messagingSettings\": {\r\n            \"allowUserEditMessages\": properties[TeamMsgAllowUserEditMessages],\r\n            \"allowUserDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowOwnerDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowTeamMentions\": properties[TeamMsgAllowTeamMentions],\r\n            \"allowChannelMentions\": properties[TeamMsgAllowChannelMentions]\r\n        },\r\n        \"funSettings\": {\r\n            \"allowGiphy\": properties[TeamFsAllowGiphy],\r\n            \"allowStickersAndMemes\": properties[TeamFsAllowStickersAndMemes],\r\n            \"allowCustomMemes\": properties[TeamFsAllowCustomMemes]\r\n        }\r\n    });\r\n    var url = baseUriEndpoint + \"/teams/\" + properties[TeamId];\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CloneTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"description\": properties[TeamDescription],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"partsToClone\": \"apps,tabs,settings,channels,members\",\r\n        \"visibility\": \"public\"\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/clone\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamUserPrincipalName = properties[TeamUserPrincipalName];\r\n    if (!(typeof teamUserPrincipalName === \"string\")) throw new Error(\"properties[TeamUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(teamUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelUserPrincipalName = properties[ChannelUserPrincipalName];\r\n    if (!(typeof channelUserPrincipalName === \"string\")) throw new Error(\"properties[ChannelUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(channelUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetUsers(cb) {\r\n    var url = baseUriEndpoint + \"/users\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupOwner(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/users/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/owners/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddChannelMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n        \"roles\": [],\r\n        \"user@odata.bind\": baseUriEndpoint + \"/users('\" + properties[ChannelUserId] + \"')\"\r\n    });\r\n\r\n    let teamId = properties[ChannelTeamId];\r\n    let channelId = properties[ChannelId];\r\n\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(teamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/members\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n// DELETE /groups/{id}/members/{id}/$ref\r\nfunction RemoveGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + parameters[TeamUserId]\r\n    // });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    let teamUserId = properties[TeamUserId];\r\n    if (!(typeof teamUserId === \"string\")) throw new Error(\"properties[TeamUserId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/\" + encodeURIComponent(teamUserId) + \"/$ref\";\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ExecuteRequest(url: string, data: string, requestType: string, cb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n        if (xhr.readyState !== 4)\r\n            return;\r\n        if (xhr.status == 201) {\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            var obj = JSON.parse(xhr.responseText);\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 204) {\r\n            if (typeof cb === 'function')\r\n                cb(xhr.responseText);\r\n        }\r\n        else if (xhr.status == 200) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            //console.log(\"ExecuteRequest cb type of: \" + (typeof cb).toString());\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 202) {\r\n            if (typeof cb === 'function')\r\n                cb(null);\r\n        }\r\n        else if (xhr.status == 400) {\r\n            // This is a bad request, return error to UI\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n        }\r\n        else if (xhr.status == 404) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            // This is to supress an error that happens with team archive/unarchive\r\n            var errorMessage = obj.error.message;\r\n            if (errorMessage.startswith == \"No Team found with Group id\") {\r\n                // do nothing - supress error\r\n            }\r\n            else {\r\n                throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            }\r\n            //console.log(\"MSTeamsConnector ExecuteRequest: Failed with 404 error.\");\r\n            //throw new Error(obj.error.code + \" error: \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n        }\r\n        else {\r\n            postResult({\r\n                //TeamIsSuccessful: false\r\n            });\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n        }\r\n    };\r\n    console.log(\"MSTeamsConnector ExecuteRequest: \" + url);\r\n    xhr.open(requestType.toUpperCase(), url);\r\n    // Authentication Header\r\n    xhr.withCredentials = true;\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    if (requestType.toUpperCase() == \"PUT\" || requestType.toUpperCase() == \"POST\" || requestType.toUpperCase() == \"PATCH\") {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    }\r\n    xhr.send(data);\r\n}\r\n\r\nfunction CreateAndReturnTeamObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    postResult({\r\n        [TeamId]: properties[TeamId],\r\n        [TeamDisplayName]: properties[TeamDisplayName],\r\n        [TeamCreationDate]: properties[TeamCreationDate],\r\n        [TeamDescription]: properties[TeamDescription],\r\n        [TeamEmail]: properties[TeamEmail],\r\n        [TeamMailEnabled]: properties[TeamMailEnabled],\r\n        [TeamMailNickname]: properties[TeamMailNickname],\r\n        [TeamWeburl]: properties[TeamWeburl],\r\n        [TeamArchiveStatus]: properties[TeamArchiveStatus],\r\n        [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAdd(parameters: SingleRecord, properties: SingleRecord) {\r\n    //TODO - Should we make a call to Get Group Details by ID to get the team object details - for returning back to K2 user\r\n    // Add Team to a group\r\n    CreateTeam(parameters, properties, function (b) {\r\n        properties[TeamWeburl] = b.webUrl;\r\n        // Get user\r\n        GetUser(parameters, properties, function (c) {\r\n            properties[TeamUserId] = c.id;\r\n            // Add Owner\r\n            AddGroupOwner(parameters, properties, function (d) {\r\n                // Add Owner As Member\r\n                AddGroupMembers(parameters, properties, function (e) {\r\n                    //Return Team Object\r\n                    CreateAndReturnTeamObject(parameters, properties);\r\n                });\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTeam(parameters, properties, function (c) {\r\n        if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n            postResult({\r\n                [TeamIsSuccessful]: true\r\n            });\r\n        }\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamMyTeamsList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetMyTeams(parameters, properties, function (a) {\r\n        //console.log(a);\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamDescription]: x.description,\r\n                [TeamIsArchived]: x.isArchived\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteGetDriveRootChildren(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetDriveRootChildren(parameters, properties, function (a) {\r\n        //console.log(a);\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [DriveChildId]: x.id,\r\n                [DriveChildFolderName]: x.name,\r\n                [DriveChildWebUrl]: x.webUrl\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTeams(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamResourceProvisioningOptions]: x.resourceProvisioningOptions[0]\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction GetTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    if (parameters[TeamDisplayNameStartsWith] == null || parameters[TeamDisplayNameStartsWith] == \"\") {\r\n        let component = \"?$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    else {\r\n        let teamDisplayNameStartsWith = parameters[TeamDisplayNameStartsWith];\r\n        if (!(typeof teamDisplayNameStartsWith === \"string\")) throw new Error(\"parameters[TeamDisplayNameStartsWith] is not of type string\");\r\n\r\n        let component = \"?$filter=startswith(displayName, '\" + encodeURIComponent(teamDisplayNameStartsWith) + \"')&$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetMyTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var url = baseUriEndpoint + \"/me/joinedTeams\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamArchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    ArchiveTeam(parameters, properties, function (b) {\r\n        // CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUnarchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    UnarchiveTeam(parameters, properties, function (b) {\r\n        CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction CheckArchivalStatus(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamArchiveOperationUrl = parameters[TeamArchiveOperationUrl];\r\n    if (!(typeof teamArchiveOperationUrl === \"string\")) throw new Error(\"parameters[TeamArchiveOperationUrl] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/\" + encodeURIComponent(teamArchiveOperationUrl);\r\n    ExecuteRequest(url, data, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetDriveRootChildren(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let driveId = properties[DriveId];\r\n    if (!(typeof driveId === \"string\")) throw new Error(\"properties[DriveId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/drives/\" + encodeURIComponent(driveId) + \"/root/children\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCheckStatus(parameters: SingleRecord, properties: SingleRecord) {\r\n    CheckArchivalStatus(parameters, properties, function (b) {\r\n        postResult({\r\n            [TeamOperationId]: b.id,\r\n            [TeamOperationType]: b.operationType,\r\n            [TeamCreationDate]: b.createdDateTime,\r\n            [TeamArchiveStatus]: b.status,\r\n            [TeamLastActionDate]: b.lastActionDateTime,\r\n            [TeamAttemptsCount]: b.attemptsCount,\r\n            [TeamTargetResourceId]: b.targetResourceId,\r\n            [TeamTargetResourceLocation]: b.targetResourceLocation,\r\n            [TeamArchiveError]: b.error\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamClone(parameters: SingleRecord, properties: SingleRecord) {\r\n    CloneTeam(parameters, properties, function (b) {\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannel(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[ChannelIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[ChannelIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case ChannelGet:\r\n            onexecuteChannelGet(parameters, properties);\r\n            break;\r\n        case ChannelList:\r\n            onexecuteChannelList(parameters, properties);\r\n            break;\r\n        case ChannelCreate:\r\n            onexecuteChannelCreate(parameters, properties);\r\n            break;\r\n        case ChannelDelete:\r\n            onexecuteChannelDelete(parameters, properties);\r\n            break;\r\n        case ChannelUpdate:\r\n            onexecuteChannelUpdate(parameters, properties);\r\n            break;\r\n        case ChannelAddMember:\r\n            onexecuteChannelAddMember(parameters, properties);\r\n            break;\r\n        case ChannelSendMessage:\r\n            onexecuteSendMessage(parameters, properties);\r\n            break;\r\n        case ChannelReplyMessage:\r\n            onexecuteReplyMessage(parameters, properties);\r\n            break;\r\n        case ChannelSendAdaptiveCard:\r\n            onexecuteSendAdaptiveCard(parameters, properties);\r\n            break;\r\n        case ChannelMessages:\r\n            onexecuteGetChannelMessages(parameters, properties);\r\n            break;\r\n        case ChannelGetDrive:\r\n            onexecuteGetChannelDrive(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The channel method \" + methodName + \" is not supported...\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        properties[TeamUserId] = b.id;\r\n        AddGroupMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelUser(parameters, properties, function (b) {\r\n        properties[ChannelUserPrincipalName] = b.userPrincipalName;\r\n        properties[ChannelUserId] = b.id;\r\n        AddChannelMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [ChannelIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamRemoveMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        RemoveGroupMembers(parameters, properties, function (c) {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAddOwner(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        AddGroupOwner(parameters, properties, function (c) {\r\n            // console.log(\"**after AddGroupOwner\" + c.id + \",\" + c.userPrincipalName);\r\n            // var stringValue = String(parameters[TeamAddAsMemberAlso]);\r\n            // var boolValue = stringValue.toLowerCase() == 'true' ? true : false;\r\n            // console.log(boolValue);\r\n            // if (boolValue) {\r\n            //     AddGroupMembers(parameters, properties, function (d) {\r\n            //         if (d.responseText == null || d.responseText == \"\" || d.responseText == undefined || d.responseText == \"undefined\") {\r\n            //             postResult({\r\n            //                 [TeamIsSuccessful]: true\r\n            //             });\r\n            //         }\r\n            //     });\r\n            // }\r\n            // else {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[ChannelIsSuccessful] = true;\r\n    GetChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id,\r\n            properties[ChannelDisplayName] = a.displayName,\r\n            properties[ChannelDescription] = a.description,\r\n            properties[ChannelEmail] = a.email,\r\n            properties[ChannelWeburl] = a.webUrl\r\n        //Post Results\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [ChannelId]: x.id,\r\n                [ChannelDisplayName]: x.displayName,\r\n                [ChannelDescription]: x.description,\r\n                [ChannelEmail]: x.email\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteGetChannelMessages(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelMessages(parameters, properties, function (a) {\r\n        postResult(a.map(x => {\r\n            return {\r\n                [ChannelMessageId]: x.id,\r\n                [ChannelMessageBody]: x.message,\r\n                [ChannelMessageUser]: x.user,\r\n                [ChannelMessageDate]: x.date\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    CreateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteGetChannelDrive(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelDrive(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelDriveId]: a.parentReference.driveId,\r\n            [ChannelDriveUrl]: a.webUrl\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteChannel(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction DeleteChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription],\r\n        \"membershipType\": properties[MembershipType]\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateAndReturnChannelObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    //var ChannelId = String(properties[ChannelId]);\r\n    // if (ChannelId == null || ChannelId == \"undefined\" || ChannelId == \"\" || ChannelId == undefined)\r\n    //     parameters[ChannelId] = properties[ChannelId];\r\n    postResult({\r\n        [ChannelId]: properties[ChannelId],\r\n        [ChannelDisplayName]: properties[ChannelDisplayName],\r\n        [ChannelDescription]: properties[ChannelDescription],\r\n        [ChannelEmail]: properties[ChannelEmail],\r\n        [ChannelWeburl]: properties[ChannelWeburl],\r\n        [ChannelIsSuccessful]: properties[ChannelIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction GetChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelDrive(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/filesFolder\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels?$select=id, displayname, description, email\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelMessages(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //console.log(`GetChannelMessages Started: Team ID:${properties[ChannelTeamId]} Channel ID:${properties[ChannelId]}`);\r\n    let channelTeamId = properties[ChannelTeamId];\r\n\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function') {\r\n            //console.log(`GET Succeeded: ${responseText}`);\r\n            var messages = responseText.value.map(x => { return { \"id\": x.id, \"message\": GetCleanedMessage(x), \"user\": x.from.user.displayName, \"date\": x.createdDateTime } })\r\n            //console.log(messages);\r\n            cb(messages);\r\n        }\r\n    });\r\n}\r\n\r\nfunction GetCleanedMessage(messageObject) {\r\n    var message = messageObject.body.content;\r\n\r\n    if (message.indexOf('<attachment id=\"74d20c7f34aa4a7fb74e2b30004247c5\"></attachment>') > -1) {\r\n        var tempMessage = \"\";\r\n        var card = messageObject.attachments[0].content;\r\n        var cardObject = JSON.parse(card);\r\n\r\n        if (cardObject.body != undefined) {\r\n            cardObject.body.forEach(b => {\r\n                if (b.type == \"ColumnSet\") {\r\n                    b.columns.forEach(c => {\r\n                        c.items.forEach(i => {\r\n                            if (i.type == \"TextBlock\") {\r\n                                var startTag = i.size != undefined && i.size == \"large\" ? \"<h3>\" : \"<span>\";\r\n                                var boldStartTag = i.weight != undefined && i.weight == \"bolder\" ? \"<b>\" : \"\";\r\n                                var boldEndTag = boldStartTag == \"<b>\" ? \"</b>\" : \"\";\r\n                                var endTag = startTag == \"<h3>\" ? \"</h3>\" : \"</span>\";\r\n\r\n                                tempMessage += `<div class='teams-message-row'>${startTag}${boldStartTag}${i.text}${boldEndTag}${endTag}</div>`;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            message = cardObject.text;\r\n        }\r\n        message = message.replace('<attachment id=\"74d20c7f34aa4a7fb74e2b30004247c5\"></attachment>', tempMessage);\r\n    }\r\n\r\n    message = message.replace(\"<at\", \"<b\").replace(\"</at>\", \"</b>\");\r\n\r\n    return message;\r\n}\r\n\r\nfunction UpdateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription]\r\n        //\"email\": \"test@k2rocks.com\" TODO: Pass the correct parameter here\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteSendMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    SendMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true,\r\n            [ChannelMessageId]: a.id\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteSendAdaptiveCard(parameters: SingleRecord, properties: SingleRecord) {\r\n    SendAdaptiveCard(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true,\r\n            [ChannelMessageId]: a.id\r\n        });\r\n    });\r\n}\r\n\r\nfunction SendAdaptiveCard(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var data = JSON.stringify(\r\n        {\r\n            \"subject\": null,\r\n            \"body\": {\r\n                \"contentType\": \"html\",\r\n                \"content\": \"<attachment id=\\\"74d20c7f34aa4a7fb74e2b30004247c5\\\"></attachment>\"\r\n            },\r\n            \"attachments\": [\r\n                {\r\n                    \"id\": \"74d20c7f34aa4a7fb74e2b30004247c5\",\r\n                    \"contentType\": \"application/vnd.microsoft.card.adaptive\",\r\n                    \"content\": properties[ChannelMessageBody].toString()\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction SendMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    if (properties[ChannelMessageBody].toString().indexOf(\"<at\") > -1) {\r\n        GetUsers(function (u) {\r\n            var importance = properties[ChannelMessageIsImportant] == \"true\" ? \"High\" : \"Normal\";\r\n            var obj = {\r\n                \"subject\": properties[ChannelMessageSubject],\r\n                \"importance\": importance.toString(),\r\n                \"body\": {\r\n                    \"contentType\": \"html\",\r\n                    \"content\": properties[ChannelMessageBody]\r\n                },\r\n                \"mentions\": []\r\n            };\r\n\r\n            if (properties[ChannelMessageBody].toString().indexOf(\"<at\") > -1) {\r\n                obj.mentions = GetMentions(properties, properties[ChannelMessageBody], u);\r\n            }\r\n\r\n            var data = JSON.stringify(obj);\r\n\r\n            let channelTeamId = properties[ChannelTeamId];\r\n            if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n            let channelId = properties[ChannelId];\r\n            if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n            var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n            ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n                if (typeof cb === 'function')\r\n                    cb(responseText);\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        var importance = properties[ChannelMessageIsImportant] == \"true\" ? \"High\" : \"Normal\";\r\n        var data = JSON.stringify({\r\n            \"subject\": properties[ChannelMessageSubject],\r\n            \"importance\": importance.toString(),\r\n            \"body\": {\r\n                \"contentType\": \"html\",\r\n                \"content\": properties[ChannelMessageBody]\r\n            }\r\n        });\r\n\r\n        let channelTeamId = properties[ChannelTeamId];\r\n        if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n        let channelId = properties[ChannelId];\r\n        if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n        var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n        ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n            if (typeof cb === 'function')\r\n                cb(responseText);\r\n        });\r\n    }\r\n}\r\n\r\nfunction GetMentions(properties, message, payload) {\r\n    var mentions = [];\r\n    var users = payload.value;\r\n    var matches = message.match(/<at[^>]*>.*?<\\/at>/gm);\r\n\r\n    for (let i = 0; i < matches.length; i++) {\r\n        var displayName = matches[i].replace(/<[^>]+>/g, '');\r\n        var user = users.filter(function (item) { return item.displayName == displayName })\r\n\r\n        var mentionObj = {\r\n            \"id\": i,\r\n            \"mentionText\": displayName,\r\n            \"mentioned\": {\r\n                \"application\": null,\r\n                \"device\": null,\r\n                \"conversation\": null,\r\n                \"user\": {\r\n                    \"id\": user[0].id,\r\n                    \"displayName\": displayName,\r\n                    \"userIdentityType\": \"aadUser\"\r\n                }\r\n            }\r\n        };\r\n        mentions.push(mentionObj);\r\n    }\r\n\r\n    return mentions;\r\n}\r\n\r\nfunction onexecuteReplyMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    ReplyMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction ReplyMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"body\": {\r\n            \"contentType\": \"html\",\r\n            \"content\": properties[ChannelMessageBody]\r\n        }\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    let channelMessageId = properties[ChannelMessageId];\r\n    if (!(typeof channelMessageId === \"string\")) throw new Error(\"properties[ChannelMessageId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages/\" + + encodeURIComponent(channelMessageId) + \"/replies\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabInformation(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabTeamsAppAppId]: a.teamsApp.id,\r\n            [TabTeamsAppExternalId]: a.teamsApp.externalId,\r\n            [TabTeamsAppAppDisplayName]: a.teamsApp.displayName,\r\n            [TabTeamsAppDistMethod]: a.teamsApp.distributionMethod,\r\n            [TabSortOrderIndex]: a.sortOrderIndex,\r\n            [TabWeburl]: a.webUrl\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetTabInformation(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId) + \"?$expand=teamsApp\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTab(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction UpdateTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TabDisplayName],\r\n        \"contentUrl\": properties[TabConfigContentUrl],\r\n        \"removeUrl\": properties[TabConfigRemoveUrl],\r\n        \"websiteUrl\": properties[TabConfigWebsiteUrl],\r\n    });\r\n\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TabId]: x.id,\r\n                [TabDisplayName]: x.displayName,\r\n                [TabWeburl]: x.webUrl\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTabCreate(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case TabCreateWordTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Word\", properties));\r\n            break;\r\n        case TabCreateExcelTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Excel\", properties));\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerPoint\", properties));\r\n            break;\r\n        case TabCreatePdfTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PDF\", properties));\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"OneNote\", properties));\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Planner\", properties));\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"SharePoint\", properties));\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftForms\", properties));\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftStream\", properties));\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Website\", properties));\r\n            break;\r\n        case TabCreateWikiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Wiki\", properties));\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerBI\", properties));\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"DocumentLibrary\", properties));\r\n            break;\r\n        case TabCreateCustomTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Custom\", properties));\r\n            break;\r\n        default: throw new Error(\"The object \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\n\r\nfunction prepareDataAndCreateTab(parameters: SingleRecord, properties: SingleRecord, requestBody) {\r\n    requestBody.configuration = {\r\n        \"entityId\": properties[TabConfigEntityId],\r\n        \"contentUrl\": properties[TabConfigContentUrl],\r\n        \"removeUrl\": properties[TabConfigRemoveUrl],\r\n        \"websiteUrl\": properties[TabConfigWebsiteUrl]\r\n    };\r\n\r\n    CreateTab(parameters, properties, JSON.stringify(requestBody), function (a) {\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabWeburl]: a.webUrl,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction CreateTab(parameters: SingleRecord, properties: SingleRecord, data: string, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction getRequestBody(tabType: string, properties) {\r\n    var data;\r\n    switch (tabType) {\r\n        case \"Word\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.word\"\r\n            };\r\n            break;\r\n        case \"Excel\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.excel\"\r\n            };\r\n            break;\r\n        case \"Powerpoint\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.powerpoint\"\r\n            };\r\n            break;\r\n        case \"PDF\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.pdf\"\r\n            };\r\n            break;\r\n        case \"OneNote\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/0d820ecd-def2-4297-adad-78056cde7c78\"\r\n            };\r\n            break;\r\n        case \"Planner\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.planner\"\r\n            };\r\n            break;\r\n        case \"SharePoint\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/2a527703-1f6f-4559-a332-d8a7d288cd88\"\r\n            };\r\n            break;\r\n        case \"MicrosoftForms\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/81fef3a6-72aa-4648-a763-de824aeafb7d\"\r\n            };\r\n            break;\r\n        case \"MicrosoftStream\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoftstream.embed.skypeteamstab\"\r\n            };\r\n            break;\r\n        case \"Website\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\"\r\n            };\r\n            break;\r\n        case \"Wiki\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.wiki\"\r\n            };\r\n            break;\r\n        case \"PowerBI\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.powerbi\"\r\n            };\r\n            break;\r\n        case \"DocumentLibrary\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.files.sharepoint\"\r\n            };\r\n            break;\r\n        case \"Custom\":\r\n            data = {\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/\" + properties[TabTeamsAppAppId]\r\n            };\r\n            break;\r\n        default: throw new Error(\"Tab Type is not supported or app is not installed!\");\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction onexecuteTabDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteTab(parameters, properties, function (a) {\r\n        if (a == null || a == \"\") {\r\n            postResult({\r\n                [TabIsSuccessful]: true\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction DeleteTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction GetInstalledAppList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let appTeamId = properties[AppTeamId];\r\n    if (!(typeof appTeamId === \"string\")) throw new Error(\"properties[AppTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(appTeamId) + \"/installedApps?$expand=teamsAppDefinition\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction onexecuteInstalledAppList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetInstalledAppList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [AppId]: x.id,\r\n                [AppDisplayName]: x.teamsAppDefinition.displayName,\r\n                [AppVersion]: x.teamsAppDefinition.version,\r\n                [AppTeamAppDefinitionId]: x.teamsAppDefinition.id,\r\n                [AppTeamsAppId]: x.teamsAppDefinition.teamsAppId\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecutePolicySet(parameters: SingleRecord, properties: SingleRecord) {\r\n    SetTokenPolicy(parameters, properties, function (a) {\r\n        postResult({ [TokenUpdateSuccess]: a.TokenUpdateSuccess });\r\n    });\r\n}\r\n\r\nfunction SetTokenPolicy(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tokenLifetime = properties[TokenLifetime];\r\n    let policyDisplayName = properties[TokenPolicyDisplayName];\r\n    let isOrgDefault = properties[TokenOrganizationDefault].toString() == \"true\";\r\n\r\n    if (!(typeof tokenLifetime === \"string\")) throw new Error(\"properties[TokenLifetime] is not of type string\");\r\n    if (!(typeof policyDisplayName === \"string\")) throw new Error(\"properties[TokenPolicyDisplayName] is not of type string\");\r\n\r\n    var data = JSON.stringify({\r\n        \"definition\": [\r\n            \"{\\\"TokenLifetimePolicy\\\":{\\\"Version\\\":1,\\\"AccessTokenLifetime\\\":\\\"\" + tokenLifetime + \"\\\"}}\"\r\n        ],\r\n        \"displayName\": policyDisplayName,\r\n        \"isOrganizationDefault\": isOrgDefault\r\n    });\r\n\r\n    var url = baseUriEndpointBeta + \"/policies/tokenLifetimePolicies\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb({ TokenUpdateSuccess: true });\r\n    });\r\n}\r\n\r\nfunction GetTabList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs?$select=id,displayName,webUrl\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}"],"names":["metadata","systemName","displayName","description","baseUriEndpoint","baseUriEndpointBeta","CreateTeam","parameters","properties","cb","data","JSON","stringify","ExecuteRequest","responseText","GetUser","teamUserPrincipalName","Error","encodeURIComponent","AddGroupOwner","teamId","AddGroupMembers","url","requestType","xhr","XMLHttpRequest","onreadystatechange","console","log","status","readyState","obj","parse","error","code","message","postResult","startswith","open","toUpperCase","withCredentials","setRequestHeader","send","CreateAndReturnTeamObject","CreateAndReturnChannelObject","GetCleanedMessage","messageObject","body","content","indexOf","tempMessage","card","attachments","cardObject","undefined","forEach","b","type","columns","c","items","i","startTag","size","boldStartTag","weight","boldEndTag","endTag","text","replace","onexecuteTabCreate","methodName","prepareDataAndCreateTab","getRequestBody","requestBody","configuration","tabTeamId","tabChannelId","CreateTab","a","id","webUrl","entityId","contentUrl","websiteUrl","removeUrl","tabType","ondescribe","postSchema","objects","methods","inputs","requiredInputs","outputs","onexecute","objectName","GetGroupDetailsById","createdDateTime","mail","mailEnabled","mailNickname","GetTeamDetailsByID","isArchived","onexecuteTeamGet","CreateGroup","onexecuteTeamCreate","d","e","onexecuteTeamAdd","UpdateTeam","onexecuteTeamUpdate","teamDisplayNameStartsWith","component","GetTeams","value","map","x","resourceProvisioningOptions","onexecuteTeamList","ArchiveTeam","onexecuteTeamArchive","UnarchiveTeam","onexecuteTeamUnarchive","userPrincipalName","onexecuteTeamAddMember","teamUserId","RemoveGroupMembers","onexecuteTeamRemoveMember","CloneTeam","onexecuteTeamClone","onexecuteTeamAddOwner","teamArchiveOperationUrl","CheckArchivalStatus","operationType","lastActionDateTime","attemptsCount","targetResourceId","targetResourceLocation","onexecuteTeamCheckStatus","onexecuteTeam","channelTeamId","channelId","GetChannel","email","onexecuteChannelGet","GetChannelList","onexecuteChannelList","CreateChannel","onexecuteChannelCreate","DeleteChannel","onexecuteChannelDelete","UpdateChannel","onexecuteChannelUpdate","channelUserPrincipalName","GetChannelUser","AddChannelMembers","onexecuteChannelAddMember","toString","GetUsers","u","importance","mentions","payload","users","matches","match","length","user","filter","item","mentionObj","push","GetMentions","SendMessage","onexecuteSendMessage","channelMessageId","ReplyMessage","onexecuteReplyMessage","SendAdaptiveCard","onexecuteSendAdaptiveCard","messages","from","GetChannelMessages","date","onexecuteGetChannelMessages","GetChannelDrive","parentReference","driveId","onexecuteGetChannelDrive","onexecuteChannel","tabId","GetTabInformation","teamsApp","externalId","distributionMethod","sortOrderIndex","onexecuteTabGet","UpdateTab","onexecuteTabUpdate","GetTabList","onexecuteTabList","DeleteTab","onexecuteTabDelete","onexecuteTab","appTeamId","GetInstalledAppList","teamsAppDefinition","version","teamsAppId","onexecuteInstalledAppList","onexecuteApp","tokenLifetime","policyDisplayName","isOrgDefault","TokenUpdateSuccess","SetTokenPolicy","onexecutePolicySet","onexecuteToken","GetDriveRootChildren","name","onexecuteGetDriveRootChildren","onexecuteDrive"],"mappings":"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"}