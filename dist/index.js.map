{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    systemName: \"MSTeamsJSSP\",\r\n    displayName: \"Microsoft Teams Connector\",\r\n    description: \"A connector for Microsoft Teams\"\r\n};\r\n\r\n// Constants\r\nconst baseUriEndpoint = \"https://graph.microsoft.com/v1.0\";\r\nconst baseUriEndpointBeta = \"https://graph.microsoft.com/beta\";\r\n\r\n//\r\n// Objects\r\n\r\nconst Team = \"team\";\r\nconst Channel = \"channel\";\r\nconst Tab = \"tab\";\r\nconst App = \"app\";\r\n\r\n//\r\n// Team\r\nconst TeamId = \"id\";\r\nconst TeamWeburl = \"weburl\";\r\nconst TeamDisplayName = \"displayName\";\r\nconst TeamCreationDate = \"creationDate\"\r\nconst TeamDescription = \"description\";\r\nconst TeamEmail = \"email\";\r\nconst TeamMailEnabled = \"mailEnabled\";\r\nconst TeamMailNickname = \"mailNickname\";\r\nconst TeamArchiveStatus = \"archiveStatus\";\r\nconst TeamOperationId = \"operationId\";\r\nconst TeamOperationType = \"operationType\";\r\nconst TeamLastActionDate = \"lastActionDate\";\r\nconst TeamAttemptsCount = \"attemptsCount\";\r\nconst TeamTargetResourceId = \"targetResourceId\";\r\nconst TeamTargetResourceLocation = \"targetResourceLocation\";\r\nconst TeamArchiveError = \"archiveError\";\r\nconst TeamUserPrincipalName = \"userPrincipalName\";\r\nconst TeamResourceProvisioningOptions = \"resourceProvisioningOptions\";\r\nconst TeamIsArchived = \"isArchived\";\r\nconst TeamIsSuccessful = \"isSuccessful\";\r\nconst TeamRequestStatusUrl = \"requestStatusUrl\";\r\nconst TeamMsAllowCreateUpdateChannels = \"msAllowCreateUpdateChannels\";\r\nconst TeamMsAllowDeleteChannels = \"msAllowDeleteChannels\";\r\nconst TeamMsAllowAddRemoveApps = \"msAllowAddRemoveApps\";\r\nconst TeamMsAllowCreateUpdateRemoveTabs = \"msAllowCreateUpdateRemoveTabs\";\r\nconst TeamMsAllowCreateUpdateRemoveConnectors = \"msAllowCreateUpdateRemoveConnectors\";\r\nconst TeamGsAllowCreateUpdateChannels = \"gsAllowCreateUpdateChannels\";\r\nconst TeamGsAllowDeleteChannels = \"gsAllowDeleteChannels\";\r\nconst TeamMsgAllowUserEditMessages = \"msgsAllowUserEditMessages\";\r\nconst TeamMsgAllowUserDeleteMessages = \"msgsAllowUserDeleteMessages\";\r\nconst TeamMsgAllowOwnerDeleteMessages = \"msgsAllowOwnerDeleteMessages\";\r\nconst TeamMsgAllowTeamMentions = \"msgsAllowTeamMentions\";\r\nconst TeamMsgAllowChannelMentions = \"msgsAllowChannelMentions\";\r\nconst TeamFsAllowGiphy = \"fsAllowGiphy\";\r\nconst TeamFsAllowStickersAndMemes = \"fsAllowStickersAndMemes\";\r\nconst TeamFsAllowCustomMemes = \"fsAllowCustomMemes\";\r\n\r\nconst TeamGet = \"get\";\r\nconst TeamCreate = \"create\";\r\nconst TeamAdd = \"add\"; //  not used\r\nconst TeamArchive = \"archive\";\r\nconst TeamUnarchive = \"unarchive\";\r\nconst TeamCheckStatus = \"checkStatus\"; // not used\r\nconst TeamAddMember = \"addMember\";\r\nconst TeamRemoveMember = \"removeMember\";\r\nconst TeamUpdate = \"update\";\r\nconst TeamClone = \"clone\";\r\nconst TeamAddOwner = \"addOwner\";\r\nconst TeamList = \"list\";\r\nconst TeamMyTeamsList = \"myTeamsList\";\r\n\r\nconst TeamArchiveOperationUrl = \"archiveOperationUrl\";\r\nconst TeamAddAsMemberAlso = \"addAsMemberAlso\"; //  not used\r\nconst TeamDisplayNameStartsWith = \"displayNameStartsWith\";\r\nconst TeamUserId = \"userId\";\r\n\r\n//\r\n// Channel\r\nconst ChannelId = \"id\";\r\nconst ChannelDisplayName = \"displayName\";\r\nconst ChannelDescription = \"description\";\r\nconst ChannelEmail = \"email\";\r\nconst ChannelWeburl = \"weburl\";\r\nconst ChannelIsSuccessful = \"isSuccessful\";\r\nconst ChannelTeamId = \"teamId\";\r\nconst ChannelMessageSubject = \"messageSubject\";\r\nconst ChannelMessageBody = \"messageBody\";\r\nconst ChannelMessageId = \"messageId\";\r\nconst ChannelMessageIsImportant = \"messageIsImportant\";\r\nconst MembershipType = \"membershipType\";\r\nconst ChannelUserPrincipalName = \"userPrincipalName\";\r\nconst ChannelUserId = \"userId\";\r\n\r\nconst ChannelGet = \"get\";\r\nconst ChannelList = \"list\";\r\nconst ChannelCreate = \"create\";\r\nconst ChannelDelete = \"delete\";\r\nconst ChannelUpdate = \"update\";\r\nconst ChannelSendMessage = \"sendMessage\";\r\nconst ChannelReplyMessage = \"replyMessage\";\r\nconst ChannelAddMember = \"addMember\";\r\n\r\n\r\n//\r\n// Tab\r\nconst TabId = \"id\";\r\nconst TabDisplayName = \"displayName\";\r\nconst TabWeburl = \"weburl\";\r\nconst TabConfigEntityId = \"configEntityId\";\r\nconst TabConfigContentUrl = \"configContentUrl\";\r\nconst TabConfigWebsiteUrl = \"configWebsiteUrl\";\r\nconst TabConfigRemoveUrl = \"configRemoveUrl\";\r\nconst TabTeamsAppAppId = \"teamsAppAppId\";\r\nconst TabTeamsAppExternalId = \"teamsAppExternalId\";\r\nconst TabTeamsAppAppDisplayName = \"teamsAppAppDisplayName\";\r\nconst TabTeamsAppDistMethod = \"teamsAppDistMethod\";\r\nconst TabSortOrderIndex = \"sortOrderIndex\";\r\nconst TabIsSuccessful = \"isSuccessful\";\r\nconst TabTeamId = \"teamId\";\r\nconst TabChannelId = \"channelId\";\r\n\r\nconst TabGet = \"get\";\r\nconst TabList = \"list\";\r\nconst TabCreateWordTab = \"createWordTab\";\r\nconst TabCreateExcelTab = \"createExcelTab\";\r\nconst TabCreatePowerPointTab = \"createPowerPointTab\";\r\nconst TabCreatePdfTab = \"createPdfTab\";\r\nconst TabCreateOneNoteTab = \"createOneNoteTab\";\r\nconst TabCreatePlannerTab = \"createPlannerTab\";\r\nconst TabCreateSharePointTab = \"createSharePointTab\";\r\nconst TabCreateMsFormsTab = \"createMsFormsTab\";\r\nconst TabCreateMsStreamTab = \"createStreamTab\";\r\nconst TabCreateWebsiteTab = \"createWebsiteTab\";\r\nconst TabCreateWikiTab = \"createWikiTab\";\r\nconst TabCreatePowerBiTab = \"createPowerBiTab\";\r\nconst TabCreateDocumentLibraryTab = \"createDocumentLibraryTab\";\r\nconst TabCreateCustomTab = \"createCustomTab\";\r\nconst TabDelete = \"delete\";\r\nconst TabUpdate = \"update\";\r\n\r\n//\r\n// App\r\nconst AppId = \"id\";\r\nconst AppTeamId = \"teamId\";\r\nconst AppDisplayName = \"displayName\";\r\nconst AppVersion = \"version\";\r\nconst AppTeamAppDefinitionId = \"teamsAppDefinitionId\";\r\nconst AppTeamsAppId = \"teamsAppId\";\r\n\r\nconst AppList = \"list\";\r\n\r\n//OnDescribe\r\nondescribe = function () {\r\n    postSchema({\r\n\r\n        objects: {\r\n            [Team]: {\r\n                displayName: \"Team\",\r\n                description: \"Team\",\r\n                properties: {\r\n                    [TeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamWeburl]: {\r\n                        displayName: \"Web Url\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamCreationDate]: {\r\n                        displayName: \"Created On\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamDescription]: {\r\n                        displayName: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamEmail]: {\r\n                        displayName: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamMailEnabled]: {\r\n                        displayName: \"Mail Enabled\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMailNickname]: {\r\n                        displayName: \"Mail Nickname\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveStatus]: {\r\n                        displayName: \"Archive Status\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationId]: {\r\n                        displayName: \"Operation Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamOperationType]: {\r\n                        displayName: \"Operation Type\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamLastActionDate]: {\r\n                        displayName: \"Last Action Date\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamAttemptsCount]: {\r\n                        displayName: \"Attempts Count\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceId]: {\r\n                        displayName: \"Target Resource Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamTargetResourceLocation]: {\r\n                        displayName: \"Target Resource Location\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamArchiveError]: {\r\n                        displayName: \"Error\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamResourceProvisioningOptions]: {\r\n                        displayName: \"Resource Provisioning Options\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TeamIsArchived]: {\r\n                        displayName: \"Is Archived\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamRequestStatusUrl]: {\r\n                        displayName: \"Request Status Url\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowAddRemoveApps]: {\r\n                        displayName: \"Allow add/remove apps to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveTabs]: {\r\n                        displayName: \"Allow create/update/remove tabs to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsAllowCreateUpdateRemoveConnectors]: {\r\n                        displayName: \"Allow create/update/remove connectors to members\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowCreateUpdateChannels]: {\r\n                        displayName: \"Allow create/update channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamGsAllowDeleteChannels]: {\r\n                        displayName: \"Allow delete channels to guests\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserEditMessages]: {\r\n                        displayName: \"Allow user to edit messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowUserDeleteMessages]: {\r\n                        displayName: \"Allow user to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowOwnerDeleteMessages]: {\r\n                        displayName: \"Allow owner to delete messages\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowTeamMentions]: {\r\n                        displayName: \"Allow team mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamMsgAllowChannelMentions]: {\r\n                        displayName: \"Allow channel mentions\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowGiphy]: {\r\n                        displayName: \"Allow Giphy\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowStickersAndMemes]: {\r\n                        displayName: \"Allow stickers and memes\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TeamFsAllowCustomMemes]: {\r\n                        displayName: \"Allow custom memes\",\r\n                        type: \"boolean\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TeamGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Team\",\r\n                        type: \"read\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamArchiveStatus,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a Team\",\r\n                        type: \"create\",\r\n                        inputs: [\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamDisplayName,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [\r\n                            TeamId,\r\n                            TeamDisplayName,\r\n                            TeamCreationDate,\r\n                            TeamDescription,\r\n                            TeamEmail,\r\n                            TeamMailEnabled,\r\n                            TeamMailNickname,\r\n                            TeamWeburl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    // [TeamAdd]: {\r\n                    //     displayName: \"Add\",\r\n                    //     description: \"Adds a Team to an existing group\",\r\n                    //     type: \"create\",\r\n                    //     inputs: [TeamId,\r\n                    //         TeamUserPrincipalName\r\n                    //     ],\r\n                    //     outputs: [TeamId,\r\n                    //         TeamDisplayName,\r\n                    //         TeamCreationDate,\r\n                    //         TeamDescription,\r\n                    //         TeamEmail,\r\n                    //         TeamMailEnabled,\r\n                    //         TeamMailNickname,\r\n                    //         TeamWeburl,\r\n                    //         TeamIsSuccessful\r\n                    //     ]\r\n                    // },\r\n                    [TeamArchive]: {\r\n                        displayName: \"Archive\",\r\n                        description: \"Archives a Team (makes it read-only)\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUnarchive]: {\r\n                        displayName: \"Unarchive\",\r\n                        description: \"Unarchives a Team\",\r\n                        type: \"execute\",\r\n                        inputs: [TeamId],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    /*                     [TeamCheckStatus]: {\r\n                                            displayName: \"Check Status\",\r\n                                            description: \"Check the status of an Archive job.\",\r\n                                            type: \"execute\",\r\n                                            parameters: {\r\n                                                [TeamArchiveOperationUrl]: {\r\n                                                    displayName: \"Archive/Unarchive operation URL\",\r\n                                                    type: \"string\"\r\n                                                }\r\n                                            },\r\n                                            requiredParameters: [TeamArchiveOperationUrl],\r\n                                            outputs: [TeamOperationId,\r\n                                                TeamOperationType,\r\n                                                TeamCreationDate,\r\n                                                TeamArchiveStatus,\r\n                                                TeamLastActionDate,\r\n                                                TeamAttemptsCount,\r\n                                                TeamTargetResourceId,\r\n                                                TeamTargetResourceLocation,\r\n                                                TeamArchiveError\r\n                                            ]\r\n                                        }, */\r\n                    [TeamAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamRemoveMember]: { // TODO\r\n                        displayName: \"Remove Member\",\r\n                        description: \"Removes a member from a Team\",\r\n                        type: \"delete\",\r\n                        inputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        requiredInputs: [\r\n                            TeamId,\r\n                            TeamUserPrincipalName // TODO maybe id ?\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Team's settings\",\r\n                        type: \"update\",\r\n                        inputs: [TeamId,\r\n                            TeamMsAllowCreateUpdateChannels,\r\n                            TeamMsAllowDeleteChannels,\r\n                            TeamMsAllowAddRemoveApps,\r\n                            TeamMsAllowCreateUpdateRemoveTabs,\r\n                            TeamMsAllowCreateUpdateRemoveConnectors,\r\n                            TeamGsAllowCreateUpdateChannels,\r\n                            TeamGsAllowDeleteChannels,\r\n                            TeamMsgAllowUserEditMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowUserDeleteMessages,\r\n                            TeamMsgAllowTeamMentions,\r\n                            TeamMsgAllowChannelMentions,\r\n                            TeamFsAllowGiphy,\r\n                            TeamFsAllowStickersAndMemes,\r\n                            TeamFsAllowCustomMemes\r\n                        ],\r\n                        requiredInputs: [TeamId],\r\n                        outputs: [TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamClone]: {\r\n                        displayName: \"Copy/Clone\",\r\n                        description: \"Makes a copy of an existing Team\",\r\n                        type: \"create\",\r\n                        inputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamMailNickname\r\n                        ],\r\n                        outputs: [TeamId,\r\n                            TeamRequestStatusUrl,\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamAddOwner]: {\r\n                        displayName: \"Add Owner\",\r\n                        description: \"Adds an Owner to a Team\",\r\n                        type: \"execute\",\r\n                        // parameters: {\r\n                        //     [TeamAddAsMemberAlso]: {\r\n                        //         displayName: \"Add as Member Also\",\r\n                        //         type: \"boolean\"\r\n                        //     }\r\n                        // },\r\n                        inputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [TeamId,\r\n                            TeamUserPrincipalName\r\n                        ],\r\n                        outputs: [\r\n                            TeamIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TeamList]: {\r\n                        displayName: \"List\",\r\n                        description: \"Lists all Teams and groups without Teams\",\r\n                        type: \"list\",\r\n                        parameters: {\r\n                            [TeamDisplayNameStartsWith]: {\r\n                                displayName: \"Display Name Starts With\",\r\n                                type: \"string\"\r\n                            }\r\n                        },\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamResourceProvisioningOptions\r\n                        ]\r\n                    },\r\n                    [TeamMyTeamsList]: {\r\n                        displayName: \"List My Teams\",\r\n                        description: \"Lists all Teams you belong to\",\r\n                        type: \"list\",\r\n                        outputs: [TeamId,\r\n                            TeamDisplayName,\r\n                            TeamDescription,\r\n                            TeamIsArchived\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            [Channel]: {\r\n                displayName: \"Channel\",\r\n                description: \"Channel\",\r\n                properties: {\r\n                    [ChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelDescription]: {\r\n                        displayName: \"Description\",\r\n                        description: \"Description\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelEmail]: {\r\n                        displayName: \"Email\",\r\n                        description: \"Email\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageSubject]: {\r\n                        displayName: \"Subject\",\r\n                        description: \"Message Subject\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageId]: {\r\n                        displayName: \"Message Id\",\r\n                        description: \"Message Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageBody]: {\r\n                        displayName: \"Body\",\r\n                        description: \"Message Body\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelMessageIsImportant]: {\r\n                        displayName: \"Is Important\",\r\n                        description: \"Message Importance (Normal/High)\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [MembershipType]: {\r\n                        displayName: \"Membership Type\",\r\n                        description: \"Type of Channel\",\r\n                        type: \"string\"\r\n                    },\r\n                    [ChannelUserPrincipalName]: {\r\n                        displayName: \"User Principal Name\",\r\n                        description: \"Principal Name of User\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [ChannelGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Retrieves the details of a Channel\",\r\n                        type: \"read\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List the channels in a Team\",\r\n                        type: \"list\",\r\n                        inputs: [ChannelTeamId],\r\n                        requiredInputs: [ChannelTeamId],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail\r\n                        ]\r\n                    },\r\n                    [ChannelCreate]: {\r\n                        displayName: \"Create\",\r\n                        description: \"Creates a new Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            MembershipType\r\n                        ],\r\n                        outputs: [ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription,\r\n                            ChannelEmail,\r\n                            ChannelWeburl,\r\n                            ChannelIsSuccessful\r\n                        ]\r\n                    },\r\n                    [ChannelDelete]: {\r\n                        displayName: \"Delete\",\r\n                        description: \"Deletes a Channel\",\r\n                        type: \"delete\",\r\n                        inputs: [ChannelId,\r\n                            ChannelTeamId\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelUpdate]: {\r\n                        displayName: \"Update\",\r\n                        description: \"Updates a Channel\",\r\n                        type: \"update\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription\r\n                        ],\r\n                        requiredInputs: [ChannelId,\r\n                            ChannelTeamId,\r\n                            ChannelDisplayName,\r\n                            ChannelDescription],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelAddMember]: {\r\n                        displayName: \"Add Member\",\r\n                        description: \"Adds a member to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelUserPrincipalName\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    },\r\n                    [ChannelSendMessage]: {\r\n                        displayName: \"Send Message\",\r\n                        description: \"Sends a Message to a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageSubject,\r\n                            ChannelMessageBody,\r\n                            ChannelMessageIsImportant\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful, ChannelMessageId]\r\n                    },\r\n                    [ChannelReplyMessage]: {\r\n                        displayName: \"Reply to a Message\",\r\n                        description: \"Reply to a Message in a Channel\",\r\n                        type: \"create\",\r\n                        inputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        requiredInputs: [ChannelTeamId,\r\n                            ChannelId,\r\n                            ChannelMessageId,\r\n                            ChannelMessageBody\r\n                        ],\r\n                        outputs: [ChannelIsSuccessful]\r\n                    }\r\n                }\r\n            },\r\n            [Tab]: {\r\n                displayName: \"Tab\",\r\n                description: \"Tab\",\r\n                properties: {\r\n                    [TabId]: {\r\n                        displayName: \"Tab Id\",\r\n                        description: \"Tab Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabDisplayName]: {\r\n                        displayName: \"Display Name\",\r\n                        description: \"Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigEntityId]: {\r\n                        displayName: \"Entity Id\",\r\n                        description: \"Entity Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigContentUrl]: {\r\n                        displayName: \"Content URL\",\r\n                        description: \"Content URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigWebsiteUrl]: {\r\n                        displayName: \"Website URL\",\r\n                        description: \"Website URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabConfigRemoveUrl]: {\r\n                        displayName: \"Remove URL\",\r\n                        description: \"Remove URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppExternalId]: {\r\n                        displayName: \"External Id\",\r\n                        description: \"External Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppAppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabTeamsAppDistMethod]: {\r\n                        displayName: \"Distribution Method\",\r\n                        description: \"Distribution Method\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabSortOrderIndex]: {\r\n                        displayName: \"Sort Order Index\",\r\n                        description: \"Sort Order Index\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabWeburl]: {\r\n                        displayName: \"Web URL\",\r\n                        description: \"Web URL\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabIsSuccessful]: {\r\n                        displayName: \"Is Successful\",\r\n                        description: \"Is Successful\",\r\n                        type: \"boolean\"\r\n                    },\r\n                    [TabTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [TabChannelId]: {\r\n                        displayName: \"Channel Id\",\r\n                        description: \"Channel Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [TabGet]: {\r\n                        displayName: \"Get\",\r\n                        description: \"Get the details of a tab.\",\r\n                        type: \"read\",\r\n                        inputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabId,\r\n                            TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabTeamsAppAppId,\r\n                            TabTeamsAppExternalId,\r\n                            TabTeamsAppAppDisplayName,\r\n                            TabTeamsAppDistMethod,\r\n                            TabSortOrderIndex,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabList]: {\r\n                        displayName: \"List\",\r\n                        description: \"List tabs\",\r\n                        type: \"list\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl\r\n                        ]\r\n                    },\r\n                    [TabCreateWordTab]: {\r\n                        displayName: \"Create Word tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateExcelTab]: {\r\n                        displayName: \"Create Excel tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerPointTab]: {\r\n                        displayName: \"Create PowerPoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePdfTab]: {\r\n                        displayName: \"Create PDF tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateOneNoteTab]: {\r\n                        displayName: \"Create OneNote tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePlannerTab]: {\r\n                        displayName: \"Create Planner tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateSharePointTab]: {\r\n                        displayName: \"Create SharePoint tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsFormsTab]: {\r\n                        displayName: \"Create Forms tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateMsStreamTab]: {\r\n                        displayName: \"Create Stream tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWebsiteTab]: {\r\n                        displayName: \"Create Website tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateWikiTab]: {\r\n                        displayName: \"Create Wiki tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreatePowerBiTab]: {\r\n                        displayName: \"Create PowerBI tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateDocumentLibraryTab]: {\r\n                        displayName: \"Create Document tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabCreateCustomTab]: {\r\n                        displayName: \"Create custom tab\",\r\n                        type: \"create\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabTeamsAppAppId,\r\n                            TabDisplayName\r\n                        ],\r\n                        outputs: [TabId,\r\n                            TabDisplayName,\r\n                            TabWeburl,\r\n                            TabConfigEntityId,\r\n                            TabConfigContentUrl,\r\n                            TabConfigWebsiteUrl,\r\n                            TabConfigRemoveUrl,\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabDelete]: {\r\n                        displayName: \"Delete tab\",\r\n                        type: \"delete\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [\r\n                            TabIsSuccessful\r\n                        ]\r\n                    },\r\n                    [TabUpdate]: {\r\n                        displayName: \"Update tab\",\r\n                        type: \"update\",\r\n                        inputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId,\r\n                            TabDisplayName\r\n                        ],\r\n                        requiredInputs: [TabTeamId,\r\n                            TabChannelId,\r\n                            TabId\r\n                        ],\r\n                        outputs: [TabIsSuccessful]\r\n                    },\r\n                }\r\n            },\r\n            [App]: {\r\n                displayName: \"App\",\r\n                description: \"App\",\r\n                properties: {\r\n                    [AppId]: {\r\n                        displayName: \"App Id\",\r\n                        description: \"App Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamId]: {\r\n                        displayName: \"Team Id\",\r\n                        description: \"Team Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppDisplayName]: {\r\n                        displayName: \"App Display Name\",\r\n                        description: \"App Display Name\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppVersion]: {\r\n                        displayName: \"version\",\r\n                        description: \"version\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamAppDefinitionId]: {\r\n                        displayName: \"Teams App Definition Id\",\r\n                        description: \"Teams App Definition Id\",\r\n                        type: \"string\"\r\n                    },\r\n                    [AppTeamsAppId]: {\r\n                        displayName: \"Teams App Id\",\r\n                        description: \"Teams App Id\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    [AppList]: {\r\n                        displayName: \"List installed apps\",\r\n                        type: \"list\",\r\n                        inputs: [AppTeamId],\r\n                        requiredInputs: [AppTeamId],\r\n                        outputs: [AppId,\r\n                            AppDisplayName,\r\n                            AppVersion,\r\n                            AppTeamAppDefinitionId,\r\n                            AppTeamsAppId\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\n// OnExecute\r\nonexecute = function ({ objectName, methodName, parameters, properties }) {\r\n    switch (objectName) {\r\n        case Team:\r\n            onexecuteTeam(methodName, parameters, properties);\r\n            break;\r\n        case Channel:\r\n            onexecuteChannel(methodName, parameters, properties);\r\n            break;\r\n        case Tab:\r\n            onexecuteTab(methodName, parameters, properties);\r\n            break;\r\n        case App:\r\n            onexecuteApp(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteApp(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case AppList:\r\n            onexecuteInstalledAppList(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeam(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TeamIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TeamIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TeamGet:\r\n            onexecuteTeamGet(parameters, properties);\r\n            break;\r\n        case TeamCreate:\r\n            onexecuteTeamCreate(parameters, properties);\r\n            break;\r\n        case TeamAdd:\r\n            onexecuteTeamAdd(parameters, properties);\r\n            break;\r\n        case TeamUpdate:\r\n            onexecuteTeamUpdate(parameters, properties);\r\n            break;\r\n        case TeamList:\r\n            onexecuteTeamList(parameters, properties);\r\n            break;\r\n        case TeamArchive:\r\n            onexecuteTeamArchive(parameters, properties);\r\n            break;\r\n        case TeamUnarchive:\r\n            onexecuteTeamUnarchive(parameters, properties);\r\n            break;\r\n        case TeamAddMember:\r\n            onexecuteTeamAddMember(parameters, properties);\r\n            break;\r\n        case TeamRemoveMember:\r\n            onexecuteTeamRemoveMember(parameters, properties);\r\n            break;\r\n        case TeamClone:\r\n            onexecuteTeamClone(parameters, properties);\r\n            break;\r\n        case TeamAddOwner:\r\n            onexecuteTeamAddOwner(parameters, properties);\r\n            break;\r\n        case TeamMyTeamsList:\r\n            onexecuteTeamMyTeamsList(parameters, properties);\r\n            break;\r\n        case TeamCheckStatus:\r\n            onexecuteTeamCheckStatus(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTab(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[TabIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[TabIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case TabGet:\r\n            onexecuteTabGet(parameters, properties);\r\n            break;\r\n        case TabUpdate:\r\n            onexecuteTabUpdate(parameters, properties);\r\n            break;\r\n        case TabList:\r\n            onexecuteTabList(parameters, properties);\r\n            break;\r\n        case TabDelete:\r\n            onexecuteTabDelete(parameters, properties);\r\n            break;\r\n        case TabCreateWordTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateExcelTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePdfTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateWikiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        case TabCreateCustomTab:\r\n            onexecuteTabCreate(methodName, parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[TeamIsSuccessful] = true;\r\n    //properties[TeamId] = properties[TeamId];\r\n    // Get Group Details By Group ID\r\n    GetGroupDetailsById(parameters, properties, function (b) {\r\n        properties[TeamDisplayName] = b.displayName;\r\n        properties[TeamCreationDate] = b.createdDateTime;\r\n        properties[TeamDescription] = b.description;\r\n        properties[TeamEmail] = b.mail;\r\n        properties[TeamMailEnabled] = b.mailEnabled;\r\n        properties[TeamMailNickname] = b.mailNickname;\r\n        //Get Team Details By Group ID\r\n        GetTeamDetailsByID(parameters, properties, function (c) {\r\n            properties[TeamWeburl] = c.webUrl;\r\n            properties[TeamArchiveStatus] = c.isArchived;\r\n            //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    // Create a Group, then add a team\r\n    properties[TeamIsSuccessful] = true;\r\n    CreateGroup(parameters, properties, function (a) {\r\n        //properties[TeamId] = parameters[TeamId] = a.id;\r\n        properties[TeamId] = a.id;\r\n        properties[TeamCreationDate] = a.createdDateTime;\r\n        properties[TeamDescription] = a.description;\r\n        properties[TeamDisplayName] = a.displayName;\r\n        properties[TeamEmail] = a.mail;\r\n        properties[TeamMailEnabled] = a.mailEnabled;\r\n        properties[TeamMailNickname] = a.mailNickname;\r\n        //Create a Team under the above Group\r\n        CreateTeam(parameters, properties, function (b) {\r\n            properties[TeamWeburl] = b.webUrl;\r\n            //Get User\r\n            // GetUser(parameters, properties, function (c) {\r\n            //     parameters[TeamUserId] = c.id;\r\n            //     //Add Group Owner\r\n            //     AddGroupOwner(parameters, properties, function (d) {\r\n            //         //Add Members to the Group\r\n            //         AddGroupMembers(parameters, properties, function (d) {\r\n            //             //Post Results\r\n            CreateAndReturnTeamObject(parameters, properties);\r\n            //         });\r\n            //     });\r\n            // });\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetGroupIdByMailNickName(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var component = encodeURIComponent(`?$filter=mailNickName&q='${properties[TeamMailNickname]}'`);\r\n    var url = baseUriEndpoint + \"/groups\" + component;\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetGroupDetailsById(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetTeamDetailsByID(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateGroup(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //Create Body for GROUP POST\r\n    var data = JSON.stringify({\r\n        \"description\": properties[TeamDescription],\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"groupTypes\": [\"Unified\"],\r\n        \"mailEnabled\": properties[TeamMailEnabled],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"visibility\": \"Private\",\r\n        \"securityEnabled\": false\r\n    });\r\n    var url = baseUriEndpoint + \"/groups/\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"memberSettings\": {\r\n    //         \"allowCreateUpdateChannels\": true\r\n    //     },\r\n    //     \"messagingSettings\": {\r\n    //         \"allowUserEditMessages\": true,\r\n    //         \"allowUserDeleteMessages\": true\r\n    //     },\r\n    //     \"funSettings\": {\r\n    //         \"allowGiphy\": true,\r\n    //         \"giphyContentRating\": \"strict\"\r\n    //     }\r\n    // });\r\n    var data = JSON.stringify({});\r\n    var url = baseUriEndpoint + \"/groups/\" + properties[TeamId] + \"/team\";\r\n    ExecuteRequest(url, data, \"PUT\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ArchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"shouldSetSpoSiteReadOnlyForMembers\": true\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/archive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UnarchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/unarchive\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UpdateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    //TODO - define properties that has to be updated\r\n    var data = JSON.stringify({\r\n        \"memberSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamMsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamMsAllowDeleteChannels],\r\n            \"allowAddRemoveApps\": properties[TeamMsAllowAddRemoveApps],\r\n            \"allowCreateUpdateRemoveTabs\": properties[TeamMsAllowCreateUpdateRemoveTabs],\r\n            \"allowCreateUpdateRemoveConnectors\": properties[TeamMsAllowCreateUpdateRemoveConnectors]\r\n        },\r\n        \"guestSettings\": {\r\n            \"allowCreateUpdateChannels\": properties[TeamGsAllowCreateUpdateChannels],\r\n            \"allowDeleteChannels\": properties[TeamGsAllowDeleteChannels]\r\n        },\r\n        \"messagingSettings\": {\r\n            \"allowUserEditMessages\": properties[TeamMsgAllowUserEditMessages],\r\n            \"allowUserDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowOwnerDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\r\n            \"allowTeamMentions\": properties[TeamMsgAllowTeamMentions],\r\n            \"allowChannelMentions\": properties[TeamMsgAllowChannelMentions]\r\n        },\r\n        \"funSettings\": {\r\n            \"allowGiphy\": properties[TeamFsAllowGiphy],\r\n            \"allowStickersAndMemes\": properties[TeamFsAllowStickersAndMemes],\r\n            \"allowCustomMemes\": properties[TeamFsAllowCustomMemes]\r\n        }\r\n    });\r\n    var url = baseUriEndpoint + \"/teams/\" + properties[TeamId];\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CloneTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TeamDisplayName],\r\n        \"description\": properties[TeamDescription],\r\n        \"mailNickname\": properties[TeamMailNickname],\r\n        \"partsToClone\": \"apps,tabs,settings,channels,members\",\r\n        \"visibility\": \"public\"\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/clone\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let teamUserPrincipalName = properties[TeamUserPrincipalName];\r\n    if (!(typeof teamUserPrincipalName === \"string\")) throw new Error(\"properties[TeamUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(teamUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelUser(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelUserPrincipalName = properties[ChannelUserPrincipalName];\r\n    if (!(typeof channelUserPrincipalName === \"string\")) throw new Error(\"properties[ChannelUserPrincipalName] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(channelUserPrincipalName);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupOwner(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/users/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/owners/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + properties[TeamUserId]\r\n    });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/$ref\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction AddChannelMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n        \"roles\": [],\r\n        \"user@odata.bind\": baseUriEndpoint + \"/users('\" + properties[ChannelUserId] + \"')\"\r\n    });\r\n\r\n    let teamId = properties[ChannelTeamId];\r\n    let channelId = properties[ChannelId];\r\n\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(teamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/members\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n// DELETE /groups/{id}/members/{id}/$ref\r\nfunction RemoveGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    // var data = JSON.stringify({\r\n    //     \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + parameters[TeamUserId]\r\n    // });\r\n\r\n    let teamId = properties[TeamId];\r\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\r\n\r\n    let teamUserId = properties[TeamUserId];\r\n    if (!(typeof teamUserId === \"string\")) throw new Error(\"properties[TeamUserId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/\" + encodeURIComponent(teamUserId) + \"/$ref\";\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction ExecuteRequest(url: string, data: string, requestType: string, cb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState !== 4)\r\n            return;\r\n        if (xhr.status == 201) {\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            var obj = JSON.parse(xhr.responseText);\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 204) {\r\n            if (typeof cb === 'function')\r\n                cb(xhr.responseText);\r\n        }\r\n        else if (xhr.status == 200) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\r\n            //console.log(\"ExecuteRequest cb type of: \" + (typeof cb).toString());\r\n            if (typeof cb === 'function')\r\n                cb(obj);\r\n        }\r\n        else if (xhr.status == 202) {\r\n            if (typeof cb === 'function')\r\n                cb(null);\r\n        }\r\n        else if (xhr.status == 400) {\r\n            // This is a bad request, return error to UI\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n        }\r\n        else if (xhr.status == 404) {\r\n            var obj = JSON.parse(xhr.responseText);\r\n            // This is to supress an error that happens with team archive/unarchive\r\n            var errorMessage = obj.error.message;\r\n            if (errorMessage.startswith == \"No Team found with Group id\") {\r\n                // do nothing - supress error\r\n            }\r\n            else {\r\n                throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            }\r\n            //console.log(\"MSTeamsConnector ExecuteRequest: Failed with 404 error.\");\r\n            //throw new Error(obj.error.code + \" error: \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n        }\r\n        else {\r\n            postResult({\r\n                //TeamIsSuccessful: false\r\n            });\r\n            var obj = JSON.parse(xhr.responseText);\r\n            throw new Error(obj.error.code + \": \" + obj.error.message);\r\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\r\n\r\n        }\r\n    };\r\n    console.log(\"MSTeamsConnector ExecuteRequest: \" + url);\r\n    xhr.open(requestType.toUpperCase(), url);\r\n    // Authentication Header\r\n    xhr.withCredentials = true;\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    if (requestType.toUpperCase() == \"PUT\" || requestType.toUpperCase() == \"POST\" || requestType.toUpperCase() == \"PATCH\") {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    }\r\n    xhr.send(data);\r\n}\r\n\r\nfunction CreateAndReturnTeamObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    postResult({\r\n        [TeamId]: properties[TeamId],\r\n        [TeamDisplayName]: properties[TeamDisplayName],\r\n        [TeamCreationDate]: properties[TeamCreationDate],\r\n        [TeamDescription]: properties[TeamDescription],\r\n        [TeamEmail]: properties[TeamEmail],\r\n        [TeamMailEnabled]: properties[TeamMailEnabled],\r\n        [TeamMailNickname]: properties[TeamMailNickname],\r\n        [TeamWeburl]: properties[TeamWeburl],\r\n        [TeamArchiveStatus]: properties[TeamArchiveStatus],\r\n        [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAdd(parameters: SingleRecord, properties: SingleRecord) {\r\n    //TODO - Should we make a call to Get Group Details by ID to get the team object details - for returning back to K2 user\r\n    // Add Team to a group\r\n    CreateTeam(parameters, properties, function (b) {\r\n        properties[TeamWeburl] = b.webUrl;\r\n        // Get user\r\n        GetUser(parameters, properties, function (c) {\r\n            properties[TeamUserId] = c.id;\r\n            // Add Owner\r\n            AddGroupOwner(parameters, properties, function (d) {\r\n                // Add Owner As Member\r\n                AddGroupMembers(parameters, properties, function (e) {\r\n                    //Return Team Object\r\n                    CreateAndReturnTeamObject(parameters, properties);\r\n                });\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTeam(parameters, properties, function (c) {\r\n        if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n            postResult({\r\n                [TeamIsSuccessful]: true\r\n            });\r\n        }\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamMyTeamsList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetMyTeams(parameters, properties, function (a) {\r\n        //console.log(a);\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamDescription]: x.description,\r\n                [TeamIsArchived]: x.isArchived\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTeams(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TeamId]: x.id,\r\n                [TeamDisplayName]: x.displayName,\r\n                [TeamResourceProvisioningOptions]: x.resourceProvisioningOptions[0]\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction GetTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    if (parameters[TeamDisplayNameStartsWith] == null || parameters[TeamDisplayNameStartsWith] == \"\") {\r\n        let component = \"?$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    else {\r\n        let teamDisplayNameStartsWith = parameters[TeamDisplayNameStartsWith];\r\n        if (!(typeof teamDisplayNameStartsWith === \"string\")) throw new Error(\"parameters[TeamDisplayNameStartsWith] is not of type string\");\r\n\r\n        let component = \"?$filter=startswith(displayName, '\" + encodeURIComponent(teamDisplayNameStartsWith) + \"')&$select=id,displayName,resourceProvisioningOptions\";\r\n        var url = baseUriEndpoint + \"/groups\" + component;\r\n    }\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetMyTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var url = baseUriEndpoint + \"/me/joinedTeams\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamArchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    ArchiveTeam(parameters, properties, function (b) {\r\n        // CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamUnarchive(parameters: SingleRecord, properties: SingleRecord) {\r\n    UnarchiveTeam(parameters, properties, function (b) {\r\n        CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction CheckArchivalStatus(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = null;\r\n\r\n    let teamArchiveOperationUrl = parameters[TeamArchiveOperationUrl];\r\n    if (!(typeof teamArchiveOperationUrl === \"string\")) throw new Error(\"parameters[TeamArchiveOperationUrl] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/\" + encodeURIComponent(teamArchiveOperationUrl);\r\n    ExecuteRequest(url, data, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamCheckStatus(parameters: SingleRecord, properties: SingleRecord) {\r\n    CheckArchivalStatus(parameters, properties, function (b) {\r\n        postResult({\r\n            [TeamOperationId]: b.id,\r\n            [TeamOperationType]: b.operationType,\r\n            [TeamCreationDate]: b.createdDateTime,\r\n            [TeamArchiveStatus]: b.status,\r\n            [TeamLastActionDate]: b.lastActionDateTime,\r\n            [TeamAttemptsCount]: b.attemptsCount,\r\n            [TeamTargetResourceId]: b.targetResourceId,\r\n            [TeamTargetResourceLocation]: b.targetResourceLocation,\r\n            [TeamArchiveError]: b.error\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamClone(parameters: SingleRecord, properties: SingleRecord) {\r\n    CloneTeam(parameters, properties, function (b) {\r\n        //CreateAndReturnTeamObject(parameters, properties);\r\n        postResult({\r\n            [TeamId]: properties[TeamId],\r\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\r\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannel(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    if (properties == null && parameters == null) {\r\n        //do nothing\r\n    }\r\n    else if (properties == null && parameters !== null) {\r\n        parameters[ChannelIsSuccessful] = true;\r\n    }\r\n    else {\r\n        properties[ChannelIsSuccessful] = true;\r\n    }\r\n    switch (methodName) {\r\n        case ChannelGet:\r\n            onexecuteChannelGet(parameters, properties);\r\n            break;\r\n        case ChannelList:\r\n            onexecuteChannelList(parameters, properties);\r\n            break;\r\n        case ChannelCreate:\r\n            onexecuteChannelCreate(parameters, properties);\r\n            break;\r\n        case ChannelDelete:\r\n            onexecuteChannelDelete(parameters, properties);\r\n            break;\r\n        case ChannelUpdate:\r\n            onexecuteChannelUpdate(parameters, properties);\r\n            break;\r\n        case ChannelAddMember:\r\n            onexecuteChannelAddMember(parameters, properties);\r\n            break;\r\n        case ChannelSendMessage:\r\n            onexecuteSendMessage(parameters, properties);\r\n            break;\r\n        case ChannelReplyMessage:\r\n            onexecuteReplyMessage(parameters, properties);\r\n            break;\r\n        default: throw new Error(\"The channel method \" + methodName + \" is not supported...\");\r\n    }\r\n}\r\n\r\nfunction onexecuteTeamAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        properties[TeamUserId] = b.id;\r\n        AddGroupMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelAddMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelUser(parameters, properties, function (b) {\r\n        properties[ChannelUserPrincipalName] = b.userPrincipalName;\r\n        properties[ChannelUserId] = b.id;\r\n        AddChannelMembers(parameters, properties, function (c) {\r\n            //ToDO - remove the if condition and handle in try catch block\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [ChannelIsSuccessful]: true\r\n                });\r\n           }\r\n       });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamRemoveMember(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        RemoveGroupMembers(parameters, properties, function (c) {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteTeamAddOwner(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetUser(parameters, properties, function (b) {\r\n        properties[TeamUserId] = b.id;\r\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\r\n        AddGroupOwner(parameters, properties, function (c) {\r\n            // console.log(\"**after AddGroupOwner\" + c.id + \",\" + c.userPrincipalName);\r\n            // var stringValue = String(parameters[TeamAddAsMemberAlso]);\r\n            // var boolValue = stringValue.toLowerCase() == 'true' ? true : false;\r\n            // console.log(boolValue);\r\n            // if (boolValue) {\r\n            //     AddGroupMembers(parameters, properties, function (d) {\r\n            //         if (d.responseText == null || d.responseText == \"\" || d.responseText == undefined || d.responseText == \"undefined\") {\r\n            //             postResult({\r\n            //                 [TeamIsSuccessful]: true\r\n            //             });\r\n            //         }\r\n            //     });\r\n            // }\r\n            // else {\r\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\r\n                postResult({\r\n                    [TeamIsSuccessful]: true\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    properties[ChannelIsSuccessful] = true;\r\n    GetChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id,\r\n            properties[ChannelDisplayName] = a.displayName,\r\n            properties[ChannelDescription] = a.description,\r\n            properties[ChannelEmail] = a.email,\r\n            properties[ChannelWeburl] = a.webUrl\r\n        //Post Results\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetChannelList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [ChannelId]: x.id,\r\n                [ChannelDisplayName]: x.displayName,\r\n                [ChannelDescription]: x.description,\r\n                [ChannelEmail]: x.email\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    CreateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        CreateAndReturnChannelObject(parameters, properties);\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateChannel(parameters, properties, function (a) {\r\n        properties[ChannelId] = a.id;\r\n        properties[ChannelDisplayName] = a.displayName;\r\n        properties[ChannelDescription] = a.description;\r\n        properties[ChannelEmail] = a.email;\r\n        properties[ChannelWeburl] = a.webUrl;\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction onexecuteChannelDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteChannel(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction DeleteChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription],\r\n        \"membershipType\": properties[MembershipType]\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction CreateAndReturnChannelObject(parameters: SingleRecord, properties: SingleRecord) {\r\n    //var ChannelId = String(properties[ChannelId]);\r\n    // if (ChannelId == null || ChannelId == \"undefined\" || ChannelId == \"\" || ChannelId == undefined)\r\n    //     parameters[ChannelId] = properties[ChannelId];\r\n    postResult({\r\n        [ChannelId]: properties[ChannelId],\r\n        [ChannelDisplayName]: properties[ChannelDisplayName],\r\n        [ChannelDescription]: properties[ChannelDescription],\r\n        [ChannelEmail]: properties[ChannelEmail],\r\n        [ChannelWeburl]: properties[ChannelWeburl],\r\n        [ChannelIsSuccessful]: properties[ChannelIsSuccessful]\r\n    });\r\n}\r\n\r\nfunction GetChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetChannelList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels?$select=id, displayname, description, email\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction UpdateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[ChannelDisplayName],\r\n        \"description\": properties[ChannelDescription]\r\n        //\"email\": \"test@k2rocks.com\" TODO: Pass the correct parameter here\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteSendMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    SendMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true,\r\n            [ChannelMessageId]: a.id\r\n        });\r\n    });\r\n}\r\n\r\nfunction SendMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var importance = properties[ChannelMessageIsImportant] == \"true\" ? \"High\" : \"Normal\";\r\n    var obj = {\r\n        \"subject\": properties[ChannelMessageSubject],\r\n        \"importance\": importance.toString(),\r\n        \"body\": {\r\n            \"contentType\": \"html\",\r\n            \"content\": properties[ChannelMessageBody]\r\n        },\r\n        \"mentions\": []\r\n    };\r\n\r\n    if (properties[ChannelMessageBody].toString().indexOf(\"<at\") > -1)\r\n    {\r\n        obj.mentions = GetMentions(properties, properties[ChannelMessageBody].toString());\r\n    }\r\n\r\n    var data = JSON.stringify(obj);\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction GetMentions(properties, message)\r\n{\r\n    var mentions = [];\r\n    \r\n    var matches = message.match(/<at[^>]*>.*?<\\/at>/gm);\r\n\r\n    for (let i = 0; i < matches.length; i++)\r\n    {\r\n        properties[ChannelUserPrincipalName] = matches[i].replace(/<[^>]+>/g, '');\r\n\r\n        GetChannelUser(null, properties, function (b) {\r\n            var mentionObj = {\r\n                \"id\": i,\r\n                \"mentionText\": b.displayName,\r\n                \"mentioned\": {\r\n                    \"application\": null,\r\n                    \"device\": null,\r\n                    \"conversation\": null,\r\n                    \"user\": {\r\n                        \"id\": b.id,\r\n                        \"displayName\": b.displayName,\r\n                        \"userIdentityType\": \"aadUser\"\r\n                    }\r\n                }\r\n            };\r\n            mentions.push(mentionObj);\r\n        });\r\n    }\r\n\r\n    return mentions;\r\n}\r\n\r\nfunction onexecuteReplyMessage(parameters: SingleRecord, properties: SingleRecord) {\r\n    ReplyMessage(parameters, properties, function (a) {\r\n        postResult({\r\n            [ChannelIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction ReplyMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"body\": {\r\n            \"contentType\": \"html\",\r\n            \"content\": properties[ChannelMessageBody]\r\n        }\r\n    });\r\n\r\n    let channelTeamId = properties[ChannelTeamId];\r\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\r\n\r\n    let channelId = properties[ChannelId];\r\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\r\n\r\n    let channelMessageId = properties[ChannelMessageId];\r\n    if (!(typeof channelMessageId === \"string\")) throw new Error(\"properties[ChannelMessageId] is not of type string\");\r\n\r\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages/\" + + encodeURIComponent(channelMessageId) + \"/replies\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabGet(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabInformation(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabTeamsAppAppId]: a.teamsApp.id,\r\n            [TabTeamsAppExternalId]: a.teamsApp.externalId,\r\n            [TabTeamsAppAppDisplayName]: a.teamsApp.displayName,\r\n            [TabTeamsAppDistMethod]: a.teamsApp.distributionMethod,\r\n            [TabSortOrderIndex]: a.sortOrderIndex,\r\n            [TabWeburl]: a.webUrl\r\n        });\r\n    });\r\n}\r\n\r\nfunction GetTabInformation(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId) + \"?$expand=teamsApp\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    UpdateTab(parameters, properties, function (a) {\r\n        postResult({\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction UpdateTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    var data = JSON.stringify({\r\n        \"displayName\": properties[TabDisplayName]\r\n    });\r\n\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction onexecuteTabList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetTabList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [TabId]: x.id,\r\n                [TabDisplayName]: x.displayName,\r\n                [TabWeburl]: x.webUrl\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction onexecuteTabCreate(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName) {\r\n        case TabCreateWordTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Word\", properties));\r\n            break;\r\n        case TabCreateExcelTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Excel\", properties));\r\n            break;\r\n        case TabCreatePowerPointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerPoint\", properties));\r\n            break;\r\n        case TabCreatePdfTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PDF\", properties));\r\n            break;\r\n        case TabCreateOneNoteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"OneNote\", properties));\r\n            break;\r\n        case TabCreatePlannerTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Planner\", properties));\r\n            break;\r\n        case TabCreateSharePointTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"SharePoint\", properties));\r\n            break;\r\n        case TabCreateMsFormsTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftForms\", properties));\r\n            break;\r\n        case TabCreateMsStreamTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftStream\", properties));\r\n            break;\r\n        case TabCreateWebsiteTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Website\", properties));\r\n            break;\r\n        case TabCreateWikiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Wiki\", properties));\r\n            break;\r\n        case TabCreatePowerBiTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerBI\", properties));\r\n            break;\r\n        case TabCreateDocumentLibraryTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"DocumentLibrary\", properties));\r\n            break;\r\n        case TabCreateCustomTab:\r\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Custom\", properties));\r\n            break;\r\n        default: throw new Error(\"The object \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\n\r\nfunction prepareDataAndCreateTab(parameters: SingleRecord, properties: SingleRecord, requestBody: string) {\r\n    CreateTab(parameters, properties, requestBody, function (a) {\r\n        // CreateAndReturnChannelObject(parameters, properties);\r\n        postResult({\r\n            [TabId]: a.id,\r\n            [TabDisplayName]: a.displayName,\r\n            [TabWeburl]: a.webUrl,\r\n            [TabConfigEntityId]: a.configuration.entityId,\r\n            [TabConfigContentUrl]: a.configuration.contentUrl,\r\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\r\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\r\n            [TabIsSuccessful]: true\r\n        });\r\n    });\r\n}\r\n\r\nfunction CreateTab(parameters: SingleRecord, properties: SingleRecord, data: string, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs\";\r\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\nfunction getRequestBody(tabType: string, properties) {\r\n    var data;\r\n    switch (tabType) {\r\n        case \"Word\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.word\"\r\n            });\r\n            break;\r\n        case \"Excel\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.excel\"\r\n            });\r\n            break;\r\n        case \"Powerpoint\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.powerpoint\"\r\n            });\r\n            break;\r\n        case \"PDF\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.pdf\"\r\n            });\r\n            break;\r\n        case \"OneNote\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/0d820ecd-def2-4297-adad-78056cde7c78\"\r\n            });\r\n            break;\r\n        case \"Planner\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.planner\"\r\n            });\r\n            break;\r\n        case \"SharePoint\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/2a527703-1f6f-4559-a332-d8a7d288cd88\"\r\n            });\r\n            break;\r\n        case \"MicrosoftForms\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/81fef3a6-72aa-4648-a763-de824aeafb7d\"\r\n            });\r\n            break;\r\n        case \"MicrosoftStream\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoftstream.embed.skypeteamstab\"\r\n            });\r\n            break;\r\n        case \"Website\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\"\r\n            });\r\n            break;\r\n        case \"Wiki\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.wiki\"\r\n            });\r\n            break;\r\n        case \"PowerBI\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.powerbi\"\r\n            });\r\n            break;\r\n        case \"DocumentLibrary\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.files.sharepoint\"\r\n            });\r\n            break;\r\n        case \"Custom\":\r\n            data = JSON.stringify({\r\n                \"displayName\": properties[TabDisplayName],\r\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/\" + properties[TabTeamsAppAppId]\r\n            });\r\n            break;\r\n        default: throw new Error(\"Tab Type is not supported or app is not installed!\");\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction onexecuteTabDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    DeleteTab(parameters, properties, function (a) {\r\n        if (a == null || a == \"\") {\r\n            postResult({\r\n                [TabIsSuccessful]: true\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction DeleteTab(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    let tabId = properties[TabId];\r\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\r\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction GetInstalledAppList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let appTeamId = properties[AppTeamId];\r\n    if (!(typeof appTeamId === \"string\")) throw new Error(\"properties[AppTeamId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(appTeamId) + \"/installedApps?$expand=teamsAppDefinition\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}\r\n\r\n\r\nfunction onexecuteInstalledAppList(parameters: SingleRecord, properties: SingleRecord) {\r\n    GetInstalledAppList(parameters, properties, function (a) {\r\n        postResult(a.value.map(x => {\r\n            return {\r\n                [AppId]: x.id,\r\n                [AppDisplayName]: x.teamsAppDefinition.displayName,\r\n                [AppVersion]: x.teamsAppDefinition.version,\r\n                [AppTeamAppDefinitionId]: x.teamsAppDefinition.id,\r\n                [AppTeamsAppId]: x.teamsAppDefinition.teamsAppId\r\n            };\r\n        }));\r\n    });\r\n}\r\n\r\nfunction GetTabList(parameters: SingleRecord, properties: SingleRecord, cb) {\r\n    let tabTeamId = properties[TabTeamId];\r\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\r\n\r\n    let tabChannelId = properties[TabChannelId];\r\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\r\n\r\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs?$select=id,displayName,webUrl\";\r\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\r\n        if (typeof cb === 'function')\r\n            cb(responseText);\r\n    });\r\n}"],"names":["metadata","systemName","displayName","description","baseUriEndpoint","CreateTeam","parameters","properties","cb","data","JSON","stringify","ExecuteRequest","responseText","GetUser","teamUserPrincipalName","Error","encodeURIComponent","GetChannelUser","channelUserPrincipalName","AddGroupOwner","teamId","AddGroupMembers","url","requestType","xhr","XMLHttpRequest","onreadystatechange","readyState","status","obj","parse","error","code","message","postResult","startswith","console","log","open","toUpperCase","withCredentials","setRequestHeader","send","CreateAndReturnTeamObject","CreateAndReturnChannelObject","onexecuteTabCreate","methodName","prepareDataAndCreateTab","getRequestBody","requestBody","tabTeamId","tabChannelId","CreateTab","a","id","webUrl","configuration","entityId","contentUrl","websiteUrl","removeUrl","tabType","ondescribe","postSchema","objects","type","methods","inputs","requiredInputs","outputs","onexecute","objectName","GetGroupDetailsById","b","createdDateTime","mail","mailEnabled","mailNickname","GetTeamDetailsByID","c","isArchived","onexecuteTeamGet","CreateGroup","onexecuteTeamCreate","d","e","onexecuteTeamAdd","UpdateTeam","undefined","onexecuteTeamUpdate","teamDisplayNameStartsWith","component","GetTeams","value","map","x","resourceProvisioningOptions","onexecuteTeamList","ArchiveTeam","onexecuteTeamArchive","UnarchiveTeam","onexecuteTeamUnarchive","userPrincipalName","onexecuteTeamAddMember","teamUserId","RemoveGroupMembers","onexecuteTeamRemoveMember","CloneTeam","onexecuteTeamClone","onexecuteTeamAddOwner","teamArchiveOperationUrl","CheckArchivalStatus","operationType","lastActionDateTime","attemptsCount","targetResourceId","targetResourceLocation","onexecuteTeamCheckStatus","onexecuteTeam","channelTeamId","channelId","GetChannel","email","onexecuteChannelGet","GetChannelList","onexecuteChannelList","CreateChannel","onexecuteChannelCreate","DeleteChannel","onexecuteChannelDelete","UpdateChannel","onexecuteChannelUpdate","baseUriEndpointBeta","AddChannelMembers","onexecuteChannelAddMember","importance","toString","indexOf","mentions","matches","match","i","length","replace","mentionObj","push","GetMentions","SendMessage","onexecuteSendMessage","channelMessageId","ReplyMessage","onexecuteReplyMessage","onexecuteChannel","tabId","GetTabInformation","teamsApp","externalId","distributionMethod","sortOrderIndex","onexecuteTabGet","UpdateTab","onexecuteTabUpdate","GetTabList","onexecuteTabList","DeleteTab","onexecuteTabDelete","onexecuteTab","appTeamId","GetInstalledAppList","teamsAppDefinition","version","teamsAppId","onexecuteInstalledAppList","onexecuteApp"],"mappings":"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"}